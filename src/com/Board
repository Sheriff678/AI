package com.company;
import javax.swing.*;
import java.awt.*;

public class Board extends JFrame
{
    public static final int X_SIZE = 8, Y_SIZE = 7, Z_SIZE = 8;
    public static final char TIE = 'T', RED = 'R', BLUE = 'B', EMPTY = '-', PLAYING = '-';
    private char[][][] board;
    private char winner;

    public Board()
    {
        winner = PLAYING; board = new char[Z_SIZE][Y_SIZE][X_SIZE];
        for(int z = 0; z < Z_SIZE; z++)
        {
            for(int y = 0; y < Y_SIZE; y++)
            {
                for(int x = 0; x < X_SIZE; x++){board[z][y][x] = EMPTY;}
            }
        }
    }

    public Board(Board b)
    {
        winner = b.getWinner(); board = b.getBoard();
    }

    public Location makeMove(Move m, char p) // 6 is on the bottom, 0 is on top
    {
        if(!isFull(m))
        {
            for(int y = 6; y >= 0; y--)
            {
                if(board[m.getCol()][y][m.getRow()] == EMPTY)
                {
                    board[m.getCol()][y][m.getRow()] = p;
                    return new Location(m.getCol(), y, m.getRow());
                }
            }
        }
        return null;
    }

    public void setLocation(Location l, char p){board[l.getZ()][l.getY()][l.getX()] = p;}

    public char getLocation(Location l){return board[l.getZ()][l.getY()][l.getX()];}

    public char getWinner(){return winner;}

    public char[][][] getBoard(){return board;}

    /*
    public boolean isEmpty(Move m)
    {
        for(int y=6; y >=0; y--)
        {
            if(board[m.getCol()][y][m.getRow()] == EMPTY)
                return true;
        }
        return false;
    }*/

    public boolean isFull(Move m)
    {
        if(board[m.getRow()][0][m.getCol()] != EMPTY){return true;}
        return false;
    }

    public void reset()
    {
        winner = PLAYING;
        for(int z = 0; z < Z_SIZE; z++)
        {
            for(int y = 0; y < Y_SIZE; y++)
            {
                for(int x = 0; x < X_SIZE; x++){board[z][y][x] = EMPTY;}
            }
        }
    }

    public void draw(Graphics g)
    {
        setSize(212, 962);
        g.setColor(Color.BLACK);
        g.fillRect(0, 0, getWidth(), getHeight());

        g.setColor(Color.WHITE);
        for(int a = 0; a < 7; a++) // a = board no.
        {
            int b = (a*132) + 32; // b = board's y location
            for(int c = 0; c < 9; c++) // c = line no.
            {
                g.drawLine(10+(8*c), (b+128)-(16*c), 138+(8*c), (b+128)-(16*c));
                g.drawLine(74+(16*c), b, 10+(16*c), b+128);
            }
        }

        for(int z = 0; z < Z_SIZE; z++)
        {
            for(int y = 0; y < Y_SIZE; y++)
            {
                int a = (y*132) + 32;
                for(int x = 0; x < X_SIZE; x++)
                {
                    int b = (a + (z*16)) + 4;
                    int c = 74 - (8*z);
                    int d = c + (16*x);
                    if(board[z][y][x] == RED)
                    {
                        g.setColor(Color.RED);
                        g.fillOval(d, b, 8, 8);
                    }
                    else if(board[z][y][x] == BLUE)
                    {
                        g.setColor(Color.BLUE);
                        g.fillOval(d, b, 8, 8);
                    }
                }
            }
        }
    }
}
