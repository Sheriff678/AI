import java.util.ArrayList;

public class P3_AI_SE_AC
{
    private char color;
    private final char neutral = '-';
    private Board board;
    private int[] scores, topScores;
    private final int lookAheadLimit = 5; // Adjustable; Default = 5

    public P3_AI_SE_AC(Board board, char color)
    {
        this.board = board; this.color = color;
    }

    private static void swap(int[] data, int spot1, int spot2)
    {
        int temp 	= data[spot1];
        data[spot1]	= data[spot2];
        data[spot2]	= temp;
    }

    private void mergeSort(int[] data, int from, int to)
    {
        if(from==0 && to == data.length-1){topScores = new int[data.length];}
        if(to == from){return;}

        int middle = (from+to)/2;
        mergeSort(data, from,middle);
        mergeSort(data,middle+1, to);

        int i = from;
        int j = middle+1;
        int k = from;

        while(i <= middle && j <=to){
            if(data[i] < data[j]){topScores[k++] = data[i++];}
            else{topScores[k++] = data[j++];}
        }

        while(i <= middle){topScores[k++] = data[i++];}
        while(j <= to){topScores[k++] = data[j++];}

        for(k = from; k<=to; k++){data[k] = topScores[k];}
    }

    public Move getMove()
    {
        //ArrayList<Board> potential_Boards = possibleBoards(board, color);
        ArrayList<Move> potential_Moves = possibleMoves(board, color);

        //BoardList countermeasures = new BoardList(potential_Boards, color, lookAheadLimit, 0);

        //bestMove = potential_Boards.get(0);
        //Board bestBoard = potential_Boards.get(0);
        
        return potential_Moves.get(0);
    }
    
    private ArrayList<Move> possibleMoves(Board board, char color)
    { 
        ArrayList<Move> moves = new ArrayList<>();
        ArrayList<Board> boards = new ArrayList<>();

        for(int x = 0; x < Board.X_SIZE; x++){for(int z = 0; z < Board.Z_SIZE; z++){if(!board.isFull(new Move(z, x))){moves.add(new Move(z, x));}}}

        //---------------SIMULATION--------------------------//
        scores = new int[moves.size()];

        int previous;
        for(int x = 0; x < moves.size(); x++){
            boards.add(new Board());
            boards.get(x).makeMove(moves.get(x), color);
            scores[x] = BoardGrader(boards.get(x), color);
            //scores[x] = Grader(boards.get(x), moves.get(x), color);

            if(scores.length == 1){previous = scores[0];}
            else{previous = scores[x-1];}

            for(int y=1; y-1< boards.size(); y++){
                if(scores[y] < previous){
                    swap(scores, y, y-1);
                    Board temp = boards.get(y-1);
                    boards.remove(y-1);
                    boards.add(y+1, temp);
                    Move dup = moves.get(y-1);
                    moves.remove(y-1);
                    moves.add(y+1, dup);
                }
            }
        }

        //----------------BEST-BOARDS----------------------//
        ArrayList<Board> bestBoards = new ArrayList<>();
        for(int x=0; x<boards.size()/4; x++){bestBoards.add(boards.get(x));}

        //----------------BEST-MOVES----------------------//
        ArrayList<Move> bestMoves = new ArrayList<>();
        for(int x=0; x<moves.size()/4; x++){bestMoves.add(moves.get(x));}

        //----------------BEST-SCORES----------------------//
        mergeSort(scores, 0, scores.length);
        for(int x=0; x<scores.length/4; x++){topScores[x] = scores[x];}
        
        return bestMoves;
    }

    private ArrayList<Board> possibleBoards(Board board, char color)
    {
        ArrayList<Move> moves = new ArrayList<>();
        ArrayList<Board> boards = new ArrayList<>();

        for(int x = 0; x < Board.X_SIZE; x++){for(int z = 0; z < Board.Z_SIZE; z++){if(!board.isFull(new Move(z, x))){moves.add(new Move(z, x));}}}

        //---------------SIMULATION--------------------------//
        scores = new int[moves.size()];

        int previous;
        for(int x = 0; x < moves.size(); x++){
            boards.add(new Board());
            boards.get(x).makeMove(moves.get(x), color);
            scores[x] = BoardGrader(boards.get(x), color);
            //scores[x] = Grader(boards.get(x), moves.get(x), color);

            if(scores.length == 1){previous = scores[0];}
            else{previous = scores[x-1];}

            for(int y=1; y-1< boards.size(); y++){
                if(scores[y] < previous){
                    swap(scores, y, y-1);
                    Board temp = boards.get(y-1);
                    boards.remove(y-1);
                    boards.add(y+1, temp);
                    Move dup = moves.get(y-1);
                    moves.remove(y-1);
                    moves.add(y+1, dup);
                }
            }
        }

        //----------------BEST-BOARDS----------------------//
        ArrayList<Board> bestBoards = new ArrayList<>();
        for(int x=0; x<boards.size()/4; x++){bestBoards.add(boards.get(x));}

        //----------------BEST-MOVES----------------------//
        ArrayList<Move> bestMoves = new ArrayList<>();
        for(int x=0; x<moves.size()/4; x++){bestMoves.add(moves.get(x));}

        //----------------BEST-SCORES----------------------//
        mergeSort(scores, 0, scores.length);
        for(int x=0; x<scores.length/4; x++){topScores[x] = scores[x];}

        return bestBoards;
    }

    private int BoardGrader(Board grid, char color)
    {
        /* -----------Scoring-----------
         * Blank spaces :              1
         * Occupied spaces :           0
         * Potential wins :            5
         * Potential losses:          -5
         */

        char opposition = neutral;

        if (color == 'R'){opposition = 'B';}
        else if (color == 'B'){opposition = 'R';}

        char[][][] b = grid.getBoard();
        int score = 0;

        //----------Horizontal-LEFT-RIGHT---------//
        for(int z=0; z < Board.Z_SIZE; z++)
        {
            for(int y=0; y < Board.Y_SIZE; y++)
            {
                for(int x=0; x+5 < Board.X_SIZE; x++)
                {
                    if(b[z][y][x] == color && b[z][y][x+1] == color && b[z][y][x+2] == color && b[z][y][x+3] == color && b[z][y][x+4] == color && b[z][y][x+5] == neutral)
                        score+=5;

                    else if(b[z][y][x] == color && b[z][y][x+1] == color && b[z][y][x+2] == color && b[z][y][x+3] == color && b[z][y][x+4] == neutral && b[z][y][x+5] == neutral)
                        score+=4;

                    else if(b[z][y][x] == color && b[z][y][x+1] == color && b[z][y][x+2] == color && b[z][y][x+3] == neutral && b[z][y][x+4] == neutral && b[z][y][x+5] == neutral)
                        score+=3;

                    else if(b[z][y][x] == color && b[z][y][x+1] == color && b[z][y][x+2] == neutral && b[z][y][x+3] == neutral && b[z][y][x+4] == neutral && b[z][y][x+5] == neutral)
                        score+=2;

                    else if(b[z][y][x] == color && b[z][y][x+1] == neutral && b[z][y][x+2] == neutral && b[z][y][x+3] == neutral && b[z][y][x+4] == neutral && b[z][y][x+5] == neutral)
                        score+=1;


                    //----------------------------------OPPOSITION--------------------------------------------//
                    if(b[z][y][x] == opposition && b[z][y][x+1] == opposition && b[z][y][x+2] == opposition && b[z][y][x+3] == opposition && b[z][y][x+4] == opposition && b[z][y][x+5] == neutral)
                        score-=5;

                    else if(b[z][y][x] == opposition && b[z][y][x+1] == opposition && b[z][y][x+2] == opposition && b[z][y][x+3] == opposition && b[z][y][x+4] == neutral && b[z][y][x+5] == neutral)
                        score-=4;

                    else if(b[z][y][x] == opposition && b[z][y][x+1] == opposition && b[z][y][x+2] == opposition && b[z][y][x+3] == neutral && b[z][y][x+4] == neutral && b[z][y][x+5] == neutral)
                        score-=3;

                    else if(b[z][y][x] == opposition && b[z][y][x+1] == opposition && b[z][y][x+2] == neutral && b[z][y][x+3] == neutral && b[z][y][x+4] == neutral && b[z][y][x+5] == neutral)
                        score-=2;

                    else if(b[z][y][x] == opposition && b[z][y][x+1] == neutral && b[z][y][x+2] == neutral && b[z][y][x+3] == neutral && b[z][y][x+4] == neutral && b[z][y][x+5] == neutral)
                        score-=1;

                }
            }
        }

        //----------Vertical---------//
        for(int z=0; z+5 < Board.Z_SIZE; z++)
        {
            for(int y=0; y < Board.Y_SIZE; y++)
            {
                for(int x=0; x < Board.X_SIZE; x++)
                {

                    if(b[z][y][x] == color && b[z+1][y][x] == color && b[z+2][y][x] == color && b[z+3][y][x] == color && b[z+4][y][x] == color && b[z+5][y][x] == neutral)
                        score+=5;

                    else if(b[z][y][x] == color && b[z+1][y][x] == color && b[z+2][y][x] == color && b[z+3][y][x] == color && b[z+4][y][x] == neutral && b[z+5][y][x] == neutral)
                        score+=4;

                    else if(b[z][y][x] == color && b[z+1][y][x] == color && b[z+2][y][x] == color && b[z+3][y][x] == neutral && b[z+4][y][x] == neutral && b[z+5][y][x] == neutral)
                        score+=3;

                    else if(b[z][y][x] == color && b[z+1][y][x] == color && b[z+2][y][x] == neutral && b[z+3][y][x] == neutral && b[z+4][y][x] == neutral && b[z+5][y][x] == neutral)
                        score+=2;

                    else if(b[z][y][x] == color && b[z+1][y][x] == neutral && b[z+2][y][x] == neutral && b[z+3][y][x] == neutral && b[z+4][y][x] == neutral && b[z+5][y][x] == neutral)
                        score+=1;


                    //----------------------------------OPPOSITION--------------------------------------------//
                    if(b[z][y][x] == opposition && b[z+1][y][x] == opposition && b[z+2][y][x] == opposition && b[z+3][y][x] == opposition && b[z+4][y][x] == opposition && b[z+5][y][x] == neutral)
                        score-=5;

                    else if(b[z][y][x] == opposition && b[z+1][y][x] == opposition && b[z+2][y][x] == opposition && b[z+3][y][x] == opposition && b[z+4][y][x] == neutral && b[z+5][y][x] == neutral)
                        score-=4;

                    else if(b[z][y][x] == opposition && b[z+1][y][x] == opposition && b[z+2][y][x] == opposition && b[z+3][y][x] == neutral && b[z+4][y][x] == neutral && b[z+5][y][x] == neutral)
                        score-=3;

                    else if(b[z][y][x] == opposition && b[z+1][y][x] == opposition && b[z+2][y][x] == neutral && b[z+3][y][x] == neutral && b[z+4][y][x] == neutral && b[z+5][y][x] == neutral)
                        score-=2;

                    else if(b[z][y][x] == opposition && b[z+1][y][x] == neutral && b[z+2][y][x] == neutral && b[z+3][y][x] == neutral && b[z+4][y][x] == neutral && b[z+5][y][x] == neutral)
                        score-=1;

                }
            }
        }

        //----------Horizontal-UP-DOWN---------//
        for(int z=0; z < Board.Z_SIZE; z++)
        {
            for(int y=0; y+5 < Board.Y_SIZE; y++)
            {
                for(int x=0; x < Board.X_SIZE; x++)
                {
                    if(b[z][y][x] == color && b[z][y+1][x] == color && b[z][y+2][x] == color && b[z][y+3][x] == color && b[z][y+4][x] == color && b[z][y+5][x] == neutral)
                        score+=5;

                    else if(b[z][y][x] == color && b[z][y+1][x] == color && b[z][y+2][x] == color && b[z][y+3][x] == color && b[z][y+4][x] == neutral && b[z][y+5][x] == neutral)
                        score+=4;

                    else if(b[z][y][x] == color && b[z][y+1][x] == color && b[z][y+2][x] == color && b[z][y+3][x] == neutral && b[z][y+4][x] == neutral && b[z][y+5][x] == neutral)
                        score+=3;

                    else if(b[z][y][x] == color && b[z][y+1][x] == color && b[z][y+2][x] == neutral && b[z][y+3][x] == neutral && b[z][y+4][x] == neutral && b[z][y+5][x] == neutral)
                        score+=2;

                    else if(b[z][y][x] == color && b[z][y+1][x] == neutral && b[z][y+2][x] == neutral && b[z][y+3][x] == neutral && b[z][y+4][x] == neutral && b[z][y+5][x] == neutral)
                        score+=1;


                    //----------------------------------OPPOSITION--------------------------------------------//
                    if(b[z][y][x] == opposition && b[z][y+1][x] == opposition && b[z][y+2][x] == opposition && b[z][y+3][x] == opposition && b[z][y+4][x] == opposition && b[z][y+5][x] == neutral)
                        score-=5;

                    else if(b[z][y][x] == opposition && b[z][y+1][x] == opposition && b[z][y+2][x] == opposition && b[z][y+3][x] == opposition && b[z][y+4][x] == neutral && b[z][y+5][x] == neutral)
                        score-=4;

                    else if(b[z][y][x] == opposition && b[z][y+1][x] == opposition && b[z][y+2][x] == opposition && b[z][y+3][x] == neutral && b[z][y+4][x] == neutral && b[z][y+5][x] == neutral)
                        score-=3;

                    else if(b[z][y][x] == opposition && b[z][y+1][x] == opposition && b[z][y+2][x] == neutral && b[z][y+3][x] == neutral && b[z][y+4][x] == neutral && b[z][y+5][x] == neutral)
                        score-=2;

                    else if(b[z][y][x] == opposition && b[z][y+1][x] == neutral && b[z][y+2][x] == neutral && b[z][y+3][x] == neutral && b[z][y+4][x] == neutral && b[z][y+5][x] == neutral)
                        score-=1;

                }
            }
        }

        //---------Diagonal-UP-DOWN-------//
        for(int z=0; z+5 < Board.Z_SIZE; z++)
        {
            for(int y=0; y < Board.Y_SIZE; y++)
            {
                for(int x=0; x+5 < Board.X_SIZE; x++)
                {
                    if(b[z][y][x] == color && b[z+1][y][x+1] == color && b[z+2][y][x+2] == color && b[z+3][y][x+3] == color && b[z+4][y][x+4] == color && b[z+5][y][x+5] == neutral)
                        score+=5;

                    else if(b[z][y][x] == color && b[z+1][y][x+1] == color && b[z+2][y][x+2] == color && b[z+3][y][x+3] == color && b[z+4][y][x+4] == neutral && b[z+5][y][x+5] == neutral)
                        score+=4;

                    else if(b[z][y][x] == color && b[z+1][y][x+1] == color && b[z+2][y][x+2] == color && b[z+3][y][x+3] == neutral && b[z+4][y][x+4] == neutral && b[z+5][y][x+5] == neutral)
                        score+=3;

                    else if(b[z][y][x] == color && b[z+1][y][x+1] == color && b[z+2][y][x+2] == neutral && b[z+3][y][x+3] == neutral && b[z+4][y][x+4] == neutral && b[z+5][y][x+5] == neutral)
                        score+=2;

                    else if(b[z][y][x] == color && b[z+1][y][x+1] == neutral && b[z+2][y][x+2] == neutral && b[z+3][y][x+3] == neutral && b[z+4][y][x+4] == neutral && b[z+5][y][x+5] == neutral)
                        score+=1;


                    //----------------------------------OPPOSITION--------------------------------------------//
                    if(b[z][y][x] == opposition && b[z+1][y][x+1] == opposition && b[z+2][y][x+2] == opposition && b[z+3][y][x+3] == opposition && b[z+4][y][x+4] == opposition && b[z+5][y][x+5] == neutral)
                        score-=5;

                    else if(b[z][y][x] == opposition && b[z+1][y][x+1] == opposition && b[z+2][y][x+2] == opposition && b[z+3][y][x+3] == opposition && b[z+4][y][x+4] == neutral && b[z+5][y][x+5] == neutral)
                        score-=4;

                    else if(b[z][y][x] == opposition && b[z+1][y][x+1] == opposition && b[z+2][y][x+2] == opposition && b[z+3][y][x+3] == neutral && b[z+4][y][x+4] == neutral && b[z+5][y][x+5] == neutral)
                        score-=3;

                    else if(b[z][y][x] == opposition && b[z+1][y][x+1] == opposition && b[z+2][y][x+2] == neutral && b[z+3][y][x+3] == neutral && b[z+4][y][x+4] == neutral && b[z+5][y][x+5] == neutral)
                        score-=2;

                    else if(b[z][y][x] == opposition && b[z+1][y][x+1] == neutral && b[z+2][y][x+2] == neutral && b[z+3][y][x+3] == neutral && b[z+4][y][x+4] == neutral && b[z+5][y][x+5] == neutral)
                        score-=1;

                }
            }
        }

        //---------Diagonal-DOWN-UP-------//
        for(int z=Board.Z_SIZE-1; z-5> 0; z--)
        {
            for(int y=0; y < Board.Y_SIZE; y++)
            {
                for(int x=0; x+5 < Board.X_SIZE; x++)
                {
                    if(b[z][y][x] == color && b[z-1][y][x+1] == color && b[z-2][y][x+2] == color && b[z-3][y][x+3] == color && b[z-4][y][x+4] == color && b[z-5][y][x+5] == neutral)
                        score+=5;

                    else if(b[z][y][x] == color && b[z-1][y][x+1] == color && b[z-2][y][x+2] == color && b[z-3][y][x+3] == color && b[z-4][y][x+4] == neutral && b[z-5][y][x+5] == neutral)
                        score+=4;

                    else if(b[z][y][x] == color && b[z-1][y][x+1] == color && b[z-2][y][x+2] == color && b[z-3][y][x+3] == neutral && b[z-4][y][x+4] == neutral && b[z-5][y][x+5] == neutral)
                        score+=3;

                    else if(b[z][y][x] == color && b[z-1][y][x+1] == color && b[z-2][y][x+2] == neutral && b[z-3][y][x+3] == neutral && b[z-4][y][x+4] == neutral && b[z-5][y][x+5] == neutral)
                        score+=2;

                    else if(b[z][y][x] == color && b[z-1][y][x+1] == neutral && b[z-2][y][x+2] == neutral && b[z-3][y][x+3] == neutral && b[z-4][y][x+4] == neutral && b[z-5][y][x+5] == neutral)
                        score+=1;


                    //----------------------------------OPPOSITION--------------------------------------------//
                    if(b[z][y][x] == opposition && b[z-1][y][x+1] == opposition && b[z-2][y][x+2] == opposition && b[z-3][y][x+3] == opposition && b[z-4][y][x+4] == opposition && b[z-5][y][x+5] == neutral)
                        score-=5;

                    else if(b[z][y][x] == opposition && b[z-1][y][x+1] == opposition && b[z-2][y][x+2] == opposition && b[z-3][y][x+3] == opposition && b[z-4][y][x+4] == neutral && b[z-5][y][x+5] == neutral)
                        score-=4;

                    else if(b[z][y][x] == opposition && b[z-1][y][x+1] == opposition && b[z-2][y][x+2] == opposition && b[z-3][y][x+3] == neutral && b[z-4][y][x+4] == neutral && b[z-5][y][x+5] == neutral)
                        score-=3;

                    else if(b[z][y][x] == opposition && b[z-1][y][x+1] == opposition && b[z-2][y][x+2] == neutral && b[z-3][y][x+3] == neutral && b[z-4][y][x+4] == neutral && b[z-5][y][x+5] == neutral)
                        score-=2;

                    else if(b[z][y][x] == opposition && b[z-1][y][x+1] == neutral && b[z-2][y][x+2] == neutral && b[z-3][y][x+3] == neutral && b[z-4][y][x+4] == neutral && b[z-5][y][x+5] == neutral)
                        score-=1;

                }
            }
        }

        //--------V-Diagonal-UP-DOWN-WALL-1----//
        for(int z=0; z < Board.Z_SIZE; z++)
        {
            for(int y=0; y+5 < Board.Y_SIZE; y++)
            {
                for(int x=0; x+5 < Board.X_SIZE; x++)
                {
                    if(b[z][y][x] == color && b[z][y+1][x+1] == color && b[z][y+2][x+2] == color && b[z][y+3][x+3] == color && b[z][y+4][x+4] == color && b[z][y+5][x+5] == neutral)
                        score+=5;

                    else if(b[z][y][x] == color && b[z][y+1][x+1] == color && b[z][y+2][x+2] == color && b[z][y+3][x+3] == color && b[z][y+4][x+4] == neutral && b[z][y+5][x+5] == neutral)
                        score+=4;

                    else if(b[z][y][x] == color && b[z][y+1][x] == color && b[z][y+2][x] == color && b[z][y+3][x+3] == neutral && b[z][y+4][x+4] == neutral && b[z][y+5][x+5] == neutral)
                        score+=3;

                    else if(b[z][y][x] == color && b[z][y+1][x+1] == color && b[z][y+2][x+2] == neutral && b[z][y+3][x+3] == neutral && b[z][y+4][x+4] == neutral && b[z][y+5][x+5] == neutral)
                        score+=2;

                    else if(b[z][y][x] == color && b[z][y+1][x+1] == neutral && b[z][y+2][x+2] == neutral && b[z][y+3][x+3] == neutral && b[z][y+4][x+4] == neutral && b[z][y+5][x+5] == neutral)
                        score+=1;


                    //----------------------------------OPPOSITION--------------------------------------------//
                    if(b[z][y][x] == opposition && b[z][y+1][x+1] == opposition && b[z][y+2][x+2] == opposition && b[z][y+3][x+3] == opposition && b[z][y+4][x+4] == opposition && b[z][y+5][x+5] == neutral)
                        score-=5;

                    else if(b[z][y][x] == opposition && b[z][y+1][x+1] == opposition && b[z][y+2][x+2] == opposition && b[z][y+3][x+3] == opposition && b[z][y+4][x+4] == neutral && b[z][y+5][x+5] == neutral)
                        score-=4;

                    else if(b[z][y][x] == opposition && b[z][y+1][x] == opposition && b[z][y+2][x] == opposition && b[z][y+3][x+3] == neutral && b[z][y+4][x+4] == neutral && b[z][y+5][x+5] == neutral)
                        score-=3;

                    else if(b[z][y][x] == opposition && b[z][y+1][x+1] == opposition && b[z][y+2][x+2] == neutral && b[z][y+3][x+3] == neutral && b[z][y+4][x+4] == neutral && b[z][y+5][x+5] == neutral)
                        score-=2;

                    else if(b[z][y][x] == opposition && b[z][y+1][x+1] == neutral && b[z][y+2][x+2] == neutral && b[z][y+3][x+3] == neutral && b[z][y+4][x+4] == neutral && b[z][y+5][x+5] == neutral)
                        score-=1;
                }
            }
        }

        //--------V-Diagonal-DOWN-UP-WALL-1----//
        for(int z=0; z < Board.Z_SIZE; z++)
        {
            for(int y=Board.Y_SIZE-1; y-5 > 0; y--)
            {
                for(int x=0; x+5 < Board.X_SIZE; x++)
                {
                    if(b[z][y][x] == color && b[z][y-1][x+1] == color && b[z][y-2][x+2] == color && b[z][y-3][x+3] == color && b[z][y-4][x+4] == color && b[z][y-5][x+5] == neutral)
                        score+=5;

                    else if(b[z][y][x] == color && b[z][y-1][x+1] == color && b[z][y-2][x+2] == color && b[z][y-3][x+3] == color && b[z][y-4][x+4] == neutral && b[z][y-5][x+5] == neutral)
                        score+=4;

                    else if(b[z][y][x] == color && b[z][y-1][x] == color && b[z][y-2][x] == color && b[z][y-3][x+3] == neutral && b[z][y-4][x+4] == neutral && b[z][y-5][x+5] == neutral)
                        score+=3;

                    else if(b[z][y][x] == color && b[z][y-1][x+1] == color && b[z][y-2][x+2] == neutral && b[z][y-3][x+3] == neutral && b[z][y-4][x+4] == neutral && b[z][y-5][x+5] == neutral)
                        score+=2;

                    else if(b[z][y][x] == color && b[z][y-1][x+1] == neutral && b[z][y-2][x+2] == neutral && b[z][y-3][x+3] == neutral && b[z][y-4][x+4] == neutral && b[z][y-5][x+5] == neutral)
                        score+=1;


                    //----------------------------------OPPOSITION--------------------------------------------//
                    if(b[z][y][x] == opposition && b[z][y-1][x+1] == opposition && b[z][y-2][x+2] == opposition && b[z][y-3][x+3] == opposition && b[z][y-4][x+4] == opposition && b[z][y-5][x+5] == neutral)
                        score-=5;

                    else if(b[z][y][x] == opposition && b[z][y-1][x+1] == opposition && b[z][y-2][x+2] == opposition && b[z][y-3][x+3] == opposition && b[z][y-4][x+4] == neutral && b[z][y-5][x+5] == neutral)
                        score-=4;

                    else if(b[z][y][x] == opposition && b[z][y-1][x] == opposition && b[z][y-2][x] == opposition && b[z][y-3][x+3] == neutral && b[z][y-4][x+4] == neutral && b[z][y-5][x+5] == neutral)
                        score-=3;

                    else if(b[z][y][x] == opposition && b[z][y-1][x+1] == opposition && b[z][y-2][x+2] == neutral && b[z][y-3][x+3] == neutral && b[z][y-4][x+4] == neutral && b[z][y-5][x+5] == neutral)
                        score-=2;

                    else if(b[z][y][x] == opposition && b[z][y-1][x+1] == neutral && b[z][y-2][x+2] == neutral && b[z][y-3][x+3] == neutral && b[z][y-4][x+4] == neutral && b[z][y-5][x+5] == neutral)
                        score-=1;

                }
            }
        }

        //--------V-Diagonal-DOWN-UP-WALL-2----//
        for(int z=Board.Z_SIZE-1; z-5 > 0; z--)
        {
            for(int y=Board.Y_SIZE-1; y-5 > 0; y--)
            {
                for(int x=0; x < Board.X_SIZE; x++)
                {
                    if(b[z][y][x] == color && b[z-1][y-1][x] == color && b[z-2][y-2][x] == color && b[z-3][y-3][x] == color && b[z-4][y-4][x] == color && b[z-5][y-5][x] == neutral)
                        score+=5;

                    else if(b[z][y][x] == color && b[z-1][y-1][x] == color && b[z-2][y-2][x] == color && b[z-3][y-3][x] == color && b[z-4][y-4][x] == neutral && b[z-5][y-5][x] == neutral)
                        score+=4;

                    else if(b[z][y][x] == color && b[z-1][y-1][x] == color && b[z-2][y-2][x] == color && b[z-3][y-3][x] == neutral && b[z-4][y-4][x] == neutral && b[z-5][y-5][x] == neutral)
                        score+=3;

                    else if(b[z][y][x] == color && b[z-1][y-1][x] == color && b[z-2][y-2][x] == neutral && b[z-3][y-3][x] == neutral && b[z-4][y-4][x] == neutral && b[z-5][y-5][x] == neutral)
                        score+=2;

                    else if(b[z][y][x] == color && b[z-1][y-1][x] == neutral && b[z-2][y-2][x] == neutral && b[z-3][y-3][x] == neutral && b[z-4][y-4][x] == neutral && b[z-5][y-5][x] == neutral)
                        score+=1;


                    //----------------------------------OPPOSITION--------------------------------------------//
                    if(b[z][y][x] == opposition && b[z-1][y-1][x] == opposition && b[z-2][y-2][x] == opposition && b[z-3][y-3][x] == opposition && b[z-4][y-4][x] == opposition && b[z-5][y-5][x] == neutral)
                        score-=5;

                    else if(b[z][y][x] == opposition && b[z-1][y-1][x] == opposition && b[z-2][y-2][x] == opposition && b[z-3][y-3][x] == opposition && b[z-4][y-4][x] == neutral && b[z-5][y-5][x] == neutral)
                        score-=4;

                    else if(b[z][y][x] == opposition && b[z-1][y-1][x] == opposition && b[z-2][y-2][x] == opposition && b[z-3][y-3][x] == neutral && b[z-4][y-4][x] == neutral && b[z-5][y-5][x] == neutral)
                        score-=3;

                    else if(b[z][y][x] == opposition && b[z-1][y-1][x] == opposition && b[z-2][y-2][x] == neutral && b[z-3][y-3][x] == neutral && b[z-4][y-4][x] == neutral && b[z-5][y-5][x] == neutral)
                        score-=2;

                    else if(b[z][y][x] == opposition && b[z-1][y-1][x] == neutral && b[z-2][y-2][x] == neutral && b[z-3][y-3][x] == neutral && b[z-4][y-4][x] == neutral && b[z-5][y-5][x] == neutral)
                        score-=1;
                }
            }
        }

        //--------V-Diagonal--UP-DOWN-WALL-2---//
        for(int z=0; z+5 < Board.Z_SIZE; z++)
        {
            for(int y=Board.Y_SIZE-1; y-5 > 0; y--)
            {
                for(int x=0; x < Board.X_SIZE; x++)
                {
                    if(b[z][y][x] == color && b[z+1][y-1][x] == color && b[z+2][y-2][x] == color && b[z+3][y-3][x] == color && b[z+4][y-4][x] == color && b[z+5][y-5][x] == neutral)
                        score+=5;

                    else if(b[z][y][x] == color && b[z+1][y-1][x] == color && b[z+2][y-2][x] == color && b[z+3][y-3][x] == color && b[z+4][y-4][x] == neutral && b[z+5][y-5][x] == neutral)
                        score+=4;

                    else if(b[z][y][x] == color && b[z+1][y-1][x] == color && b[z+2][y-2][x] == color && b[z+3][y-3][x] == neutral && b[z+4][y-4][x] == neutral && b[z+5][y-5][x] == neutral)
                        score+=3;

                    else if(b[z][y][x] == color && b[z+1][y-1][x] == color && b[z+2][y-2][x] == neutral && b[z+3][y-3][x] == neutral && b[z+4][y-4][x] == neutral && b[z+5][y-5][x] == neutral)
                        score+=2;

                    else if(b[z][y][x] == color && b[z+1][y-1][x] == neutral && b[z+2][y-2][x] == neutral && b[z+3][y-3][x] == neutral && b[z+4][y-4][x] == neutral && b[z+5][y-5][x] == neutral)
                        score+=1;


                    //----------------------------------OPPOSITION--------------------------------------------//
                    if(b[z][y][x] == opposition && b[z+1][y-1][x] == opposition && b[z+2][y-2][x] == opposition && b[z+3][y-3][x] == opposition && b[z+4][y-4][x] == opposition && b[z+5][y-5][x] == neutral)
                        score-=5;

                    else if(b[z][y][x] == opposition && b[z+1][y-1][x] == opposition && b[z+2][y-2][x] == opposition && b[z+3][y-3][x] == opposition && b[z+4][y-4][x] == neutral && b[z+5][y-5][x] == neutral)
                        score-=4;

                    else if(b[z][y][x] == opposition && b[z+1][y-1][x] == opposition && b[z+2][y-2][x] == opposition && b[z+3][y-3][x] == neutral && b[z+4][y-4][x] == neutral && b[z+5][y-5][x] == neutral)
                        score-=3;

                    else if(b[z][y][x] == opposition && b[z+1][y-1][x] == opposition && b[z+2][y-2][x] == neutral && b[z+3][y-3][x] == neutral && b[z+4][y-4][x] == neutral && b[z+5][y-5][x] == neutral)
                        score-=2;

                    else if(b[z][y][x] == opposition && b[z+1][y-1][x] == neutral && b[z+2][y-2][x] == neutral && b[z+3][y-3][x] == neutral && b[z+4][y-4][x] == neutral && b[z+5][y-5][x] == neutral)
                        score-=1;

                }
            }
        }

        //--------V-IDK-ANYMORE---------//
        for(int z=Board.Z_SIZE-1; z-5 > 0; z--)
        {
            for(int y=Board.Y_SIZE-1; y-5 > 0; y--)
            {
                for(int x=0; x+5 < Board.X_SIZE; x++)
                {
                    if(b[z][y][x] == color && b[z-1][y-1][x+1] == color && b[z-2][y-2][x+2] == color && b[z-3][y-3][x+3] == color && b[z-4][y-4][x+4] == color && b[z-5][y-5][x+5] == neutral)
                        score+=5;

                    else if(b[z][y][x] == color && b[z-1][y-1][x+1] == color && b[z-2][y-2][x+2] == color && b[z-3][y-3][x+3] == color && b[z-4][y-4][x+4] == neutral && b[z-5][y-5][x+5] == neutral)
                        score+=4;

                    else if(b[z][y][x] == color && b[z-1][y-1][x+1] == color && b[z-2][y-2][x+2] == color && b[z-3][y-3][x+3] == neutral && b[z-4][y-4][x+4] == neutral && b[z-5][y-5][x+5] == neutral)
                        score+=3;

                    else if(b[z][y][x] == color && b[z-1][y-1][x+1] == color && b[z-2][y-2][x+2] == neutral && b[z-3][y-3][x+3] == neutral && b[z-4][y-4][x+4] == neutral && b[z-5][y-5][x+5] == neutral)
                        score+=2;

                    else if(b[z][y][x] == color && b[z-1][y-1][x+1] == neutral && b[z-2][y-2][x+2] == neutral && b[z-3][y-3][x+3] == neutral && b[z-4][y-4][x+4] == neutral && b[z-5][y-5][x+5] == neutral)
                        score+=1;


                    //----------------------------------OPPOSITION--------------------------------------------//
                    if(b[z][y][x] == opposition && b[z-1][y-1][x+1] == opposition && b[z-2][y-2][x+2] == opposition && b[z-3][y-3][x+3] == opposition && b[z-4][y-4][x+4] == opposition && b[z-5][y-5][x+5] == neutral)
                        score-=5;

                    else if(b[z][y][x] == opposition && b[z-1][y-1][x+1] == opposition && b[z-2][y-2][x+2] == opposition && b[z-3][y-3][x+3] == opposition && b[z-4][y-4][x+4] == neutral && b[z-5][y-5][x+5] == neutral)
                        score-=4;

                    else if(b[z][y][x] == opposition && b[z-1][y-1][x+1] == opposition && b[z-2][y-2][x+2] == opposition && b[z-3][y-3][x+3] == neutral && b[z-4][y-4][x+4] == neutral && b[z-5][y-5][x+5] == neutral)
                        score-=3;

                    else if(b[z][y][x] == opposition && b[z-1][y-1][x+1] == opposition && b[z-2][y-2][x+2] == neutral && b[z-3][y-3][x+3] == neutral && b[z-4][y-4][x+4] == neutral && b[z-5][y-5][x+5] == neutral)
                        score-=2;

                    else if(b[z][y][x] == opposition && b[z-1][y-1][x+1] == neutral && b[z-2][y-2][x+2] == neutral && b[z-3][y-3][x+3] == neutral && b[z-4][y-4][x+4] == neutral && b[z-5][y-5][x+5] == neutral)
                        score-=1;

                }
            }
        }

        //--------V-IDK-ANYMORE-2--------//
        for(int z=Board.Z_SIZE-1; z-5 > 0; z--)
        {
            for(int y=0; y+5 < Board.Y_SIZE; y++)
            {
                for(int x=0; x+5 < Board.X_SIZE; x++)
                {
                    if(b[z][y][x] == color && b[z-1][y+1][x+1] == color && b[z-2][y+2][x+2] == color && b[z-3][y+3][x+3] == color && b[z-4][y+4][x+4] == color && b[z-5][y+5][x+5] == neutral)
                        score+=5;

                    else if(b[z][y][x] == color && b[z-1][y+1][x+1] == color && b[z-2][y+2][x+2] == color && b[z-3][y+3][x+3] == color && b[z-4][y+4][x+4] == neutral && b[z-5][y+5][x+5] == neutral)
                        score+=4;

                    else if(b[z][y][x] == color && b[z-1][y+1][x+1] == color && b[z-2][y+2][x+2] == color && b[z-3][y+3][x+3] == neutral && b[z-4][y+4][x+4] == neutral && b[z-5][y+5][x+5] == neutral)
                        score+=3;

                    else if(b[z][y][x] == color && b[z-1][y+1][x+1] == color && b[z-2][y+2][x+2] == neutral && b[z-3][y+3][x+3] == neutral && b[z-4][y+4][x+4] == neutral && b[z-5][y+5][x+5] == neutral)
                        score+=2;

                    else if(b[z][y][x] == color && b[z-1][y+1][x+1] == neutral && b[z-2][y+2][x+2] == neutral && b[z-3][y+3][x+3] == neutral && b[z-4][y+4][x+4] == neutral && b[z-5][y+5][x+5] == neutral)
                        score+=1;


                    //----------------------------------OPPOSITION--------------------------------------------//
                    if(b[z][y][x] == opposition && b[z-1][y+1][x+1] == opposition && b[z-2][y+2][x+2] == opposition && b[z-3][y+3][x+3] == opposition && b[z-4][y+4][x+4] == opposition && b[z-5][y+5][x+5] == neutral)
                        score-=5;

                    else if(b[z][y][x] == opposition && b[z-1][y+1][x+1] == opposition && b[z-2][y+2][x+2] == opposition && b[z-3][y+3][x+3] == opposition && b[z-4][y+4][x+4] == neutral && b[z-5][y+5][x+5] == neutral)
                        score-=4;

                    else if(b[z][y][x] == opposition && b[z-1][y+1][x+1] == opposition && b[z-2][y+2][x+2] == opposition && b[z-3][y+3][x+3] == neutral && b[z-4][y+4][x+4] == neutral && b[z-5][y+5][x+5] == neutral)
                        score-=3;

                    else if(b[z][y][x] == opposition && b[z-1][y+1][x+1] == opposition && b[z-2][y+2][x+2] == neutral && b[z-3][y+3][x+3] == neutral && b[z-4][y+4][x+4] == neutral && b[z-5][y+5][x+5] == neutral)
                        score-=2;

                    else if(b[z][y][x] == opposition && b[z-1][y+1][x+1] == neutral && b[z-2][y+2][x+2] == neutral && b[z-3][y+3][x+3] == neutral && b[z-4][y+4][x+4] == neutral && b[z-5][y+5][x+5] == neutral)
                        score-=1;

                }
            }
        }

        //--------V-WTF-AM-I-DOING-------//
        for(int z=0; z+5 > 0; z++)
        {
            for(int y=0; y+5 > 0; y++)
            {
                for(int x=0; x+5 < Board.X_SIZE; x++)
                {
                    if(b[z][y][x] == color && b[z+1][y+1][x+1] == color && b[z+2][y+2][x+2] == color && b[z+3][y+3][x+3] == color && b[z+4][y+4][x+4] == color && b[z+5][y+5][x+5] == neutral)
                        score+=5;

                    else if(b[z][y][x] == color && b[z+1][y+1][x+1] == color && b[z+2][y+2][x+2] == color && b[z+3][y+3][x+3] == color && b[z+4][y+4][x+4] == neutral && b[z+5][y+5][x+5] == neutral)
                        score+=4;

                    else if(b[z][y][x] == color && b[z+1][y+1][x+1] == color && b[z+2][y+2][x+2] == color && b[z+3][y+3][x+3] == neutral && b[z+4][y+4][x+4] == neutral && b[z+5][y+5][x+5] == neutral)
                        score+=3;

                    else if(b[z][y][x] == color && b[z+1][y+1][x+1] == color && b[z+2][y+2][x+2] == neutral && b[z+3][y+3][x+3] == neutral && b[z+4][y+4][x+4] == neutral && b[z+5][y+5][x+5] == neutral)
                        score+=2;

                    else if(b[z][y][x] == color && b[z+1][y+1][x+1] == neutral && b[z+2][y+2][x+2] == neutral && b[z+3][y+3][x+3] == neutral && b[z+4][y+4][x+4] == neutral && b[z+5][y+5][x+5] == neutral)
                        score+=1;


                    //----------------------------------OPPOSITION--------------------------------------------//
                    if(b[z][y][x] == opposition && b[z+1][y+1][x+1] == opposition && b[z+2][y+2][x+2] == opposition && b[z+3][y+3][x+3] == opposition && b[z+4][y+4][x+4] == opposition && b[z+5][y+5][x+5] == neutral)
                        score-=5;

                    else if(b[z][y][x] == opposition && b[z+1][y+1][x+1] == opposition && b[z+2][y+2][x+2] == opposition && b[z+3][y+3][x+3] == opposition && b[z+4][y+4][x+4] == neutral && b[z+5][y+5][x+5] == neutral)
                        score-=4;

                    else if(b[z][y][x] == opposition && b[z+1][y+1][x+1] == opposition && b[z+2][y+2][x+2] == opposition && b[z+3][y+3][x+3] == neutral && b[z+4][y+4][x+4] == neutral && b[z+5][y+5][x+5] == neutral)
                        score-=3;

                    else if(b[z][y][x] == opposition && b[z+1][y+1][x+1] == opposition && b[z+2][y+2][x+2] == neutral && b[z+3][y+3][x+3] == neutral && b[z+4][y+4][x+4] == neutral && b[z+5][y+5][x+5] == neutral)
                        score-=2;

                    else if(b[z][y][x] == opposition && b[z+1][y+1][x+1] == neutral && b[z+2][y+2][x+2] == neutral && b[z+3][y+3][x+3] == neutral && b[z+4][y+4][x+4] == neutral && b[z+5][y+5][x+5] == neutral)
                        score-=1;
                }
            }
        }

        //--------V-WTF-AM-I-DOING-2-----//
        for(int z=0; z+5 > 0; z++)
        {
            for(int y=Board.Y_SIZE-1; y-5 > 0; y--)
            {
                for(int x=0; x+5 < Board.X_SIZE; x++)
                {
                    if(b[z][y][x] == color && b[z+1][y-1][x+1] == color && b[z+2][y-2][x+2] == color && b[z+3][y-3][x+3] == color && b[z+4][y-4][x+4] == color && b[z+5][y-5][x+5] == neutral)
                        score+=5;

                    else if(b[z][y][x] == color && b[z+1][y-1][x+1] == color && b[z+2][y-2][x+2] == color && b[z+3][y-3][x+3] == color && b[z+4][y-4][x+4] == neutral && b[z+5][y-5][x+5] == neutral)
                        score+=4;

                    else if(b[z][y][x] == color && b[z+1][y-1][x+1] == color && b[z+2][y-2][x+2] == color && b[z+3][y-3][x+3] == neutral && b[z+4][y-4][x+4] == neutral && b[z+5][y-5][x+5] == neutral)
                        score+=3;

                    else if(b[z][y][x] == color && b[z+1][y-1][x+1] == color && b[z+2][y-2][x+2] == neutral && b[z+3][y-3][x+3] == neutral && b[z+4][y-4][x+4] == neutral && b[z+5][y-5][x+5] == neutral)
                        score+=2;

                    else if(b[z][y][x] == color && b[z+1][y-1][x+1] == neutral && b[z+2][y-2][x+2] == neutral && b[z+3][y-3][x+3] == neutral && b[z+4][y-4][x+4] == neutral && b[z+5][y-5][x+5] == neutral)
                        score+=1;


                    //----------------------------------OPPOSITION--------------------------------------------//
                    if(b[z][y][x] == opposition && b[z+1][y-1][x+1] == opposition && b[z+2][y-2][x+2] == opposition && b[z+3][y-3][x+3] == opposition && b[z+4][y-4][x+4] == opposition && b[z+5][y-5][x+5] == neutral)
                        score-=5;

                    else if(b[z][y][x] == opposition && b[z+1][y-1][x+1] == opposition && b[z+2][y-2][x+2] == opposition && b[z+3][y-3][x+3] == opposition && b[z+4][y-4][x+4] == neutral && b[z+5][y-5][x+5] == neutral)
                        score-=4;

                    else if(b[z][y][x] == opposition && b[z+1][y-1][x+1] == opposition && b[z+2][y-2][x+2] == opposition && b[z+3][y-3][x+3] == neutral && b[z+4][y-4][x+4] == neutral && b[z+5][y-5][x+5] == neutral)
                        score-=3;

                    else if(b[z][y][x] == opposition && b[z+1][y-1][x+1] == opposition && b[z+2][y-2][x+2] == neutral && b[z+3][y-3][x+3] == neutral && b[z+4][y-4][x+4] == neutral && b[z+5][y-5][x+5] == neutral)
                        score-=2;

                    else if(b[z][y][x] == opposition && b[z+1][y-1][x+1] == neutral && b[z+2][y-2][x+2] == neutral && b[z+3][y-3][x+3] == neutral && b[z+4][y-4][x+4] == neutral && b[z+5][y-5][x+5] == neutral)
                        score-=1;
                }
            }
        }
        return score;
    }
    
    private int Grader(Board grid, Move move, char color)
    {
        char[][][] b = grid.getBoard();
        int score = 0;

        //----------Horizontal-LEFT-RIGHT---------//
        for(int z=0; z < Board.Z_SIZE; z++)
        {
            for(int y=0; y < Board.Y_SIZE; y++)
            {
                for(int x=0; x+5 < Board.X_SIZE; x++)
                {
                    if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()][y][move.getX()+1] == color && b[move.getZ()][y][move.getX()+2] == color && b[move.getZ()][y][move.getX()+3] == color && b[move.getZ()][y][move.getX()+4] == color && b[move.getZ()][y][move.getX()+5] == neutral)
                        score+=5;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()][y][move.getX()+1] == color && b[move.getZ()][y][move.getX()+2] == color && b[move.getZ()][y][move.getX()+3] == color && b[move.getZ()][y][move.getX()+4] == neutral && b[move.getZ()][y][move.getX()+5] == neutral)
                        score+=4;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()][y][move.getX()+1] == color && b[move.getZ()][y][move.getX()+2] == color && b[move.getZ()][y][move.getX()+3] == neutral && b[move.getZ()][y][move.getX()+4] == neutral && b[move.getZ()][y][move.getX()+5] == neutral)
                        score+=3;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()][y][move.getX()+1] == color && b[move.getZ()][y][move.getX()+2] == neutral && b[move.getZ()][y][move.getX()+3] == neutral && b[move.getZ()][y][move.getX()+4] == neutral && b[move.getZ()][y][move.getX()+5] == neutral)
                        score+=2;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()][y][move.getX()+1] == neutral && b[move.getZ()][y][move.getX()+2] == neutral && b[move.getZ()][y][move.getX()+3] == neutral && b[move.getZ()][y][move.getX()+4] == neutral && b[move.getZ()][y][move.getX()+5] == neutral)
                        score+=1;

                }
            }
        }

        //----------Vertical---------//
        for(int z=0; z+5 < Board.Z_SIZE; z++)
        {
            for(int y=0; y < Board.Y_SIZE; y++)
            {
                for(int x=0; x < Board.X_SIZE; x++)
                {

                    if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()+1][y][move.getX()] == color && b[move.getZ()+2][y][move.getX()] == color && b[move.getZ()+3][y][move.getX()] == color && b[move.getZ()+4][y][move.getX()] == color && b[move.getZ()+5][y][move.getX()] == neutral)
                        score+=5;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()+1][y][move.getX()] == color && b[move.getZ()+2][y][move.getX()] == color && b[move.getZ()+3][y][move.getX()] == color && b[move.getZ()+4][y][move.getX()] == neutral && b[move.getZ()+5][y][move.getX()] == neutral)
                        score+=4;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()+1][y][move.getX()] == color && b[move.getZ()+2][y][move.getX()] == color && b[move.getZ()+3][y][move.getX()] == neutral && b[move.getZ()+4][y][move.getX()] == neutral && b[move.getZ()+5][y][move.getX()] == neutral)
                        score+=3;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()+1][y][move.getX()] == color && b[move.getZ()+2][y][move.getX()] == neutral && b[move.getZ()+3][y][move.getX()] == neutral && b[move.getZ()+4][y][move.getX()] == neutral && b[move.getZ()+5][y][move.getX()] == neutral)
                        score+=2;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()+1][y][move.getX()] == neutral && b[move.getZ()+2][y][move.getX()] == neutral && b[move.getZ()+3][y][move.getX()] == neutral && b[move.getZ()+4][y][move.getX()] == neutral && b[move.getZ()+5][y][move.getX()] == neutral)
                        score+=1;


                }
            }
        }

        //----------Horizontal-UP-DOWN---------//
        for(int z=0; z < Board.Z_SIZE; z++)
        {
            for(int y=0; y+5 < Board.Y_SIZE; y++)
            {
                for(int x=0; x < Board.X_SIZE; x++)
                {
                    if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()][y+1][move.getX()] == color && b[move.getZ()][y+2][move.getX()] == color &&
                            b[move.getZ()][y+3][move.getX()] == color && b[move.getZ()][y+4][move.getX()] == color && b[move.getZ()][y+5][move.getX()] == neutral)
                        score+=5;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()][y+1][move.getX()] == color && b[move.getZ()][y+2][move.getX()] == color &&
                            b[move.getZ()][y+3][move.getX()] == color && b[move.getZ()][y+4][move.getX()] == neutral && b[move.getZ()][y+5][move.getX()] == neutral)
                        score+=4;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()][y+1][move.getX()] == color && b[move.getZ()][y+2][move.getX()] == color &&
                            b[move.getZ()][y+3][move.getX()] == neutral && b[move.getZ()][y+4][move.getX()] == neutral && b[move.getZ()][y+5][move.getX()] == neutral)
                        score+=3;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()][y+1][move.getX()] == color && b[move.getZ()][y+2][move.getX()] == neutral &&
                            b[move.getZ()][y+3][move.getX()] == neutral && b[move.getZ()][y+4][move.getX()] == neutral && b[move.getZ()][y+5][move.getX()] == neutral)
                        score+=2;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()][y+1][move.getX()] == neutral && b[move.getZ()][y+2][move.getX()] == neutral &&
                            b[move.getZ()][y+3][move.getX()] == neutral && b[move.getZ()][y+4][move.getX()] == neutral && b[move.getZ()][y+5][move.getX()] == neutral)
                        score+=1;


                }
            }
        }

        //---------Diagonal-UP-DOWN-------//
        for(int z=0; z+5 < Board.Z_SIZE; z++)
        {
            for(int y=0; y < Board.Y_SIZE; y++)
            {
                for(int x=0; x+5 < Board.X_SIZE; x++)
                {
                    if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()+1][y][move.getX()+1] == color && b[move.getZ()+2][y][move.getX()+2] == color &&
                            b[move.getZ()+3][y][move.getX()+3] == color && b[move.getZ()+4][y][move.getX()+4] == color && b[move.getZ()+5][y][move.getX()+5] == neutral)
                        score+=5;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()+1][y][move.getX()+1] == color && b[move.getZ()+2][y][move.getX()+2] == color &&
                            b[move.getZ()+3][y][move.getX()+3] == color && b[move.getZ()+4][y][move.getX()+4] == neutral && b[move.getZ()+5][y][move.getX()+5] == neutral)
                        score+=4;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()+1][y][move.getX()+1] == color && b[move.getZ()+2][y][move.getX()+2] == color &&
                            b[move.getZ()+3][y][move.getX()+3] == neutral && b[move.getZ()+4][y][move.getX()+4] == neutral && b[move.getZ()+5][y][move.getX()+5] == neutral)
                        score+=3;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()+1][y][move.getX()+1] == color && b[move.getZ()+2][y][move.getX()+2] == neutral &&
                            b[move.getZ()+3][y][move.getX()+3] == neutral && b[move.getZ()+4][y][move.getX()+4] == neutral && b[move.getZ()+5][y][move.getX()+5] == neutral)
                        score+=2;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()+1][y][move.getX()+1] == neutral && b[move.getZ()+2][y][move.getX()+2] == neutral &&
                            b[move.getZ()+3][y][move.getX()+3] == neutral && b[move.getZ()+4][y][move.getX()+4] == neutral && b[move.getZ()+5][y][move.getX()+5] == neutral)
                        score+=1;


                }
            }
        }

        //---------Diagonal-DOWN-UP-------//
        for(int z=Board.Z_SIZE-1; z-5> 0; z--)
        {
            for(int y=0; y < Board.Y_SIZE; y++)
            {
                for(int x=0; x+5 < Board.X_SIZE; x++)
                {
                    if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()-1][y][move.getX()+1] == color && b[move.getZ()-2][y][move.getX()+2] == color &&
                            b[move.getZ()-3][y][move.getX()+3] == color && b[move.getZ()-4][y][move.getX()+4] == color && b[move.getZ()-5][y][move.getX()+5] == neutral)
                        score+=5;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()-1][y][move.getX()+1] == color && b[move.getZ()-2][y][move.getX()+2] == color &&
                            b[move.getZ()-3][y][move.getX()+3] == color && b[move.getZ()-4][y][move.getX()+4] == neutral && b[move.getZ()-5][y][move.getX()+5] == neutral)
                        score+=4;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()-1][y][move.getX()+1] == color && b[move.getZ()-2][y][move.getX()+2] == color &&
                            b[move.getZ()-3][y][move.getX()+3] == neutral && b[move.getZ()-4][y][move.getX()+4] == neutral && b[move.getZ()-5][y][move.getX()+5] == neutral)
                        score+=3;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()-1][y][move.getX()+1] == color && b[move.getZ()-2][y][move.getX()+2] == neutral &&
                            b[move.getZ()-3][y][move.getX()+3] == neutral && b[move.getZ()-4][y][move.getX()+4] == neutral && b[move.getZ()-5][y][move.getX()+5] == neutral)
                        score+=2;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()-1][y][move.getX()+1] == neutral && b[move.getZ()-2][y][move.getX()+2] == neutral &&
                            b[move.getZ()-3][y][move.getX()+3] == neutral && b[move.getZ()-4][y][move.getX()+4] == neutral && b[move.getZ()-5][y][move.getX()+5] == neutral)
                        score+=1;


                }
            }
        }

        //--------V-Diagonal-UP-DOWN-WALL-1----//
        for(int z=0; z < Board.Z_SIZE; z++)
        {
            for(int y=0; y+5 < Board.Y_SIZE; y++)
            {
                for(int x=0; x+5 < Board.X_SIZE; x++)
                {
                    if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()][y+1][move.getX()+1] == color && b[move.getZ()][y+2][move.getX()+2] == color &&
                            b[move.getZ()][y+3][move.getX()+3] == color && b[move.getZ()][y+4][move.getX()+4] == color && b[move.getZ()][y+5][move.getX()+5] == neutral)
                        score+=5;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()][y+1][move.getX()+1] == color && b[move.getZ()][y+2][move.getX()+2] == color &&
                            b[move.getZ()][y+3][move.getX()+3] == color && b[move.getZ()][y+4][move.getX()+4] == neutral && b[move.getZ()][y+5][move.getX()+5] == neutral)
                        score+=4;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()][y+1][move.getX()] == color && b[move.getZ()][y+2][move.getX()] == color &&
                            b[move.getZ()][y+3][move.getX()+3] == neutral && b[move.getZ()][y+4][move.getX()+4] == neutral && b[move.getZ()][y+5][move.getX()+5] == neutral)
                        score+=3;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()][y+1][move.getX()+1] == color && b[move.getZ()][y+2][move.getX()+2] == neutral &&
                            b[move.getZ()][y+3][move.getX()+3] == neutral && b[move.getZ()][y+4][move.getX()+4] == neutral && b[move.getZ()][y+5][move.getX()+5] == neutral)
                        score+=2;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()][y+1][move.getX()+1] == neutral && b[move.getZ()][y+2][move.getX()+2] == neutral &&
                            b[move.getZ()][y+3][move.getX()+3] == neutral && b[move.getZ()][y+4][move.getX()+4] == neutral && b[move.getZ()][y+5][move.getX()+5] == neutral)
                        score+=1;

                }
            }
        }

        //--------V-Diagonal-DOWN-UP-WALL-1----//
        for(int z=0; z < Board.Z_SIZE; z++)
        {
            for(int y=Board.Y_SIZE-1; y-5 > 0; y--)
            {
                for(int x=0; x+5 < Board.X_SIZE; x++)
                {
                    if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()][y-1][move.getX()+1] == color && b[move.getZ()][y-2][move.getX()+2] == color &&
                            b[move.getZ()][y-3][move.getX()+3] == color && b[move.getZ()][y-4][move.getX()+4] == color && b[move.getZ()][y-5][move.getX()+5] == neutral)
                        score+=5;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()][y-1][move.getX()+1] == color && b[move.getZ()][y-2][move.getX()+2] == color &&
                            b[move.getZ()][y-3][move.getX()+3] == color && b[move.getZ()][y-4][move.getX()+4] == neutral && b[move.getZ()][y-5][move.getX()+5] == neutral)
                        score+=4;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()][y-1][move.getX()] == color && b[move.getZ()][y-2][move.getX()] == color &&
                            b[move.getZ()][y-3][move.getX()+3] == neutral && b[move.getZ()][y-4][move.getX()+4] == neutral && b[move.getZ()][y-5][move.getX()+5] == neutral)
                        score+=3;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()][y-1][move.getX()+1] == color && b[move.getZ()][y-2][move.getX()+2] == neutral &&
                            b[move.getZ()][y-3][move.getX()+3] == neutral && b[move.getZ()][y-4][move.getX()+4] == neutral && b[move.getZ()][y-5][move.getX()+5] == neutral)
                        score+=2;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()][y-1][move.getX()+1] == neutral && b[move.getZ()][y-2][move.getX()+2] == neutral &&
                            b[move.getZ()][y-3][move.getX()+3] == neutral && b[move.getZ()][y-4][move.getX()+4] == neutral && b[move.getZ()][y-5][move.getX()+5] == neutral)
                        score+=1;


                }
            }
        }

        //--------V-Diagonal-DOWN-UP-WALL-2----//
        for(int z=Board.Z_SIZE-1; z-5 > 0; z--)
        {
            for(int y=Board.Y_SIZE-1; y-5 > 0; y--)
            {
                for(int x=0; x < Board.X_SIZE; x++)
                {
                    if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()-1][y-1][move.getX()] == color && b[move.getZ()-2][y-2][move.getX()] == color &&
                            b[move.getZ()-3][y-3][move.getX()] == color && b[move.getZ()-4][y-4][move.getX()] == color && b[move.getZ()-5][y-5][move.getX()] == neutral)
                        score+=5;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()-1][y-1][move.getX()] == color && b[move.getZ()-2][y-2][move.getX()] == color &&
                            b[move.getZ()-3][y-3][move.getX()] == color && b[move.getZ()-4][y-4][move.getX()] == neutral && b[move.getZ()-5][y-5][move.getX()] == neutral)
                        score+=4;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()-1][y-1][move.getX()] == color && b[move.getZ()-2][y-2][move.getX()] == color &&
                            b[move.getZ()-3][y-3][move.getX()] == neutral && b[move.getZ()-4][y-4][move.getX()] == neutral && b[move.getZ()-5][y-5][move.getX()] == neutral)
                        score+=3;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()-1][y-1][move.getX()] == color && b[move.getZ()-2][y-2][move.getX()] == neutral &&
                            b[move.getZ()-3][y-3][move.getX()] == neutral && b[move.getZ()-4][y-4][move.getX()] == neutral && b[move.getZ()-5][y-5][move.getX()] == neutral)
                        score+=2;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()-1][y-1][move.getX()] == neutral && b[move.getZ()-2][y-2][move.getX()] == neutral &&
                            b[move.getZ()-3][y-3][move.getX()] == neutral && b[move.getZ()-4][y-4][move.getX()] == neutral && b[move.getZ()-5][y-5][move.getX()] == neutral)
                        score+=1;

                }
            }
        }

        //--------V-Diagonal--UP-DOWN-WALL-2---//
        for(int z=0; z+5 < Board.Z_SIZE; z++)
        {
            for(int y=Board.Y_SIZE-1; y-5 > 0; y--)
            {
                for(int x=0; x < Board.X_SIZE; x++)
                {
                    if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()+1][y-1][move.getX()] == color && b[move.getZ()+2][y-2][move.getX()] == color &&
                            b[move.getZ()+3][y-3][move.getX()] == color && b[move.getZ()+4][y-4][move.getX()] == color && b[move.getZ()+5][y-5][move.getX()] == neutral)
                        score+=5;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()+1][y-1][move.getX()] == color && b[move.getZ()+2][y-2][move.getX()] == color &&
                            b[move.getZ()+3][y-3][move.getX()] == color && b[move.getZ()+4][y-4][move.getX()] == neutral && b[move.getZ()+5][y-5][move.getX()] == neutral)
                        score+=4;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()+1][y-1][move.getX()] == color && b[move.getZ()+2][y-2][move.getX()] == color &&
                            b[move.getZ()+3][y-3][move.getX()] == neutral && b[move.getZ()+4][y-4][move.getX()] == neutral && b[move.getZ()+5][y-5][move.getX()] == neutral)
                        score+=3;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()+1][y-1][move.getX()] == color && b[move.getZ()+2][y-2][move.getX()] == neutral &&
                            b[move.getZ()+3][y-3][move.getX()] == neutral && b[move.getZ()+4][y-4][move.getX()] == neutral && b[move.getZ()+5][y-5][move.getX()] == neutral)
                        score+=2;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()+1][y-1][move.getX()] == neutral && b[move.getZ()+2][y-2][move.getX()] == neutral &&
                            b[move.getZ()+3][y-3][move.getX()] == neutral && b[move.getZ()+4][y-4][move.getX()] == neutral && b[move.getZ()+5][y-5][move.getX()] == neutral)
                        score+=1;

                }
            }
        }

        //--------V-IDK-ANYMORE---------//
        for(int z=Board.Z_SIZE-1; z-5 > 0; z--)
        {
            for(int y=Board.Y_SIZE-1; y-5 > 0; y--)
            {
                for(int x=0; x+5 < Board.X_SIZE; x++)
                {
                    if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()-1][y-1][move.getX()+1] == color && b[move.getZ()-2][y-2][move.getX()+2] == color &&
                            b[move.getZ()-3][y-3][move.getX()+3] == color && b[move.getZ()-4][y-4][move.getX()+4] == color && b[move.getZ()-5][y-5][move.getX()+5] == neutral)
                        score+=5;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()-1][y-1][move.getX()+1] == color && b[move.getZ()-2][y-2][move.getX()+2] == color &&
                            b[move.getZ()-3][y-3][move.getX()+3] == color && b[move.getZ()-4][y-4][move.getX()+4] == neutral && b[move.getZ()-5][y-5][move.getX()+5] == neutral)
                        score+=4;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()-1][y-1][move.getX()+1] == color && b[move.getZ()-2][y-2][move.getX()+2] == color &&
                            b[move.getZ()-3][y-3][move.getX()+3] == neutral && b[move.getZ()-4][y-4][move.getX()+4] == neutral && b[move.getZ()-5][y-5][move.getX()+5] == neutral)
                        score+=3;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()-1][y-1][move.getX()+1] == color && b[move.getZ()-2][y-2][move.getX()+2] == neutral &&
                            b[move.getZ()-3][y-3][move.getX()+3] == neutral && b[move.getZ()-4][y-4][move.getX()+4] == neutral && b[move.getZ()-5][y-5][move.getX()+5] == neutral)
                        score+=2;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()-1][y-1][move.getX()+1] == neutral && b[move.getZ()-2][y-2][move.getX()+2] == neutral &&
                            b[move.getZ()-3][y-3][move.getX()+3] == neutral && b[move.getZ()-4][y-4][move.getX()+4] == neutral && b[move.getZ()-5][y-5][move.getX()+5] == neutral)
                        score+=1;


                }
            }
        }

        //--------V-IDK-ANYMORE-2--------//
        for(int z=Board.Z_SIZE-1; z-5 > 0; z--)
        {
            for(int y=0; y+5 < Board.Y_SIZE; y++)
            {
                for(int x=0; x+5 < Board.X_SIZE; x++)
                {
                    if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()-1][y+1][move.getX()+1] == color && b[move.getZ()-2][y+2][move.getX()+2] == color &&
                            b[move.getZ()-3][y+3][move.getX()+3] == color && b[move.getZ()-4][y+4][move.getX()+4] == color && b[move.getZ()-5][y+5][move.getX()+5] == neutral)
                        score+=5;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()-1][y+1][move.getX()+1] == color && b[move.getZ()-2][y+2][move.getX()+2] == color &&
                            b[move.getZ()-3][y+3][move.getX()+3] == color && b[move.getZ()-4][y+4][move.getX()+4] == neutral && b[move.getZ()-5][y+5][move.getX()+5] == neutral)
                        score+=4;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()-1][y+1][move.getX()+1] == color && b[move.getZ()-2][y+2][move.getX()+2] == color &&
                            b[move.getZ()-3][y+3][move.getX()+3] == neutral && b[move.getZ()-4][y+4][move.getX()+4] == neutral && b[move.getZ()-5][y+5][move.getX()+5] == neutral)
                        score+=3;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()-1][y+1][move.getX()+1] == color && b[move.getZ()-2][y+2][move.getX()+2] == neutral &&
                            b[move.getZ()-3][y+3][move.getX()+3] == neutral && b[move.getZ()-4][y+4][move.getX()+4] == neutral && b[move.getZ()-5][y+5][move.getX()+5] == neutral)
                        score+=2;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()-1][y+1][move.getX()+1] == neutral && b[move.getZ()-2][y+2][move.getX()+2] == neutral &&
                            b[move.getZ()-3][y+3][move.getX()+3] == neutral && b[move.getZ()-4][y+4][move.getX()+4] == neutral && b[move.getZ()-5][y+5][move.getX()+5] == neutral)
                        score+=1;


                }
            }
        }

        //--------V-WTF-AM-I-DOING-------//
        for(int z=0; z+5 > 0; z++)
        {
            for(int y=0; y+5 > 0; y++)
            {
                for(int x=0; x+5 < Board.X_SIZE; x++)
                {
                    if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()+1][y+1][move.getX()+1] == color && b[move.getZ()+2][y+2][move.getX()+2] == color &&
                            b[move.getZ()+3][y+3][move.getX()+3] == color && b[move.getZ()+4][y+4][move.getX()+4] == color && b[move.getZ()+5][y+5][move.getX()+5] == neutral)
                        score+=5;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()+1][y+1][move.getX()+1] == color && b[move.getZ()+2][y+2][move.getX()+2] == color &&
                            b[move.getZ()+3][y+3][move.getX()+3] == color && b[move.getZ()+4][y+4][move.getX()+4] == neutral && b[move.getZ()+5][y+5][move.getX()+5] == neutral)
                        score+=4;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()+1][y+1][move.getX()+1] == color && b[move.getZ()+2][y+2][move.getX()+2] == color &&
                            b[move.getZ()+3][y+3][move.getX()+3] == neutral && b[move.getZ()+4][y+4][move.getX()+4] == neutral && b[move.getZ()+5][y+5][move.getX()+5] == neutral)
                        score+=3;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()+1][y+1][move.getX()+1] == color && b[move.getZ()+2][y+2][move.getX()+2] == neutral &&
                            b[move.getZ()+3][y+3][move.getX()+3] == neutral && b[move.getZ()+4][y+4][move.getX()+4] == neutral && b[move.getZ()+5][y+5][move.getX()+5] == neutral)
                        score+=2;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()+1][y+1][move.getX()+1] == neutral && b[move.getZ()+2][y+2][move.getX()+2] == neutral &&
                            b[move.getZ()+3][y+3][move.getX()+3] == neutral && b[move.getZ()+4][y+4][move.getX()+4] == neutral && b[move.getZ()+5][y+5][move.getX()+5] == neutral)
                        score+=1;

                }
            }
        }

        //--------V-WTF-AM-I-DOING-2-----//
        for(int z=0; z+5 > 0; z++)
        {
            for(int y=Board.Y_SIZE-1; y-5 > 0; y--)
            {
                for(int x=0; x+5 < Board.X_SIZE; x++)
                {
                    if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()+1][y-1][move.getX()+1] == color && b[move.getZ()+2][y-2][move.getX()+2] == color &&
                            b[move.getZ()+3][y-3][move.getX()+3] == color && b[move.getZ()+4][y-4][move.getX()+4] == color && b[move.getZ()+5][y-5][move.getX()+5] == neutral)
                        score+=5;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()+1][y-1][move.getX()+1] == color && b[move.getZ()+2][y-2][move.getX()+2] == color &&
                            b[move.getZ()+3][y-3][move.getX()+3] == color && b[move.getZ()+4][y-4][move.getX()+4] == neutral && b[move.getZ()+5][y-5][move.getX()+5] == neutral)
                        score+=4;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()+1][y-1][move.getX()+1] == color && b[move.getZ()+2][y-2][move.getX()+2] == color &&
                            b[move.getZ()+3][y-3][move.getX()+3] == neutral && b[move.getZ()+4][y-4][move.getX()+4] == neutral && b[move.getZ()+5][y-5][move.getX()+5] == neutral)
                        score+=3;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()+1][y-1][move.getX()+1] == color && b[move.getZ()+2][y-2][move.getX()+2] == neutral &&
                            b[move.getZ()+3][y-3][move.getX()+3] == neutral && b[move.getZ()+4][y-4][move.getX()+4] == neutral && b[move.getZ()+5][y-5][move.getX()+5] == neutral)
                        score+=2;

                    else if(b[move.getZ()][y][move.getX()] == color && b[move.getZ()+1][y-1][move.getX()+1] == neutral && b[move.getZ()+2][y-2][move.getX()+2] == neutral &&
                            b[move.getZ()+3][y-3][move.getX()+3] == neutral && b[move.getZ()+4][y-4][move.getX()+4] == neutral && b[move.getZ()+5][y-5][move.getX()+5] == neutral)
                        score+=1;

                }
            }
        }
        return score;
    }
}
