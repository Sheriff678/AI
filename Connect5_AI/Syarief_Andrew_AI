import java.util.ArrayList;

public class Syarief_Andrew_AI extends Player
{
    private char opposition;
    private char color;
    private final char neutral = '-';
    private Board board;

    public Syarief_Andrew_AI(Board board, char color)
    {
        super("test", color);
        this.board = board;
        this.color = color;

        if (color == 'R'){opposition = 'B';}
        else if (color == 'B'){opposition = 'R';}
    }


    public Move getMove(Board board)
    {
        ArrayList<Move> moves = new ArrayList<>();
        Move bestMove = new Move(0,0);

        //--------------TEST-ALL-MOVES-----------------//
        for(int z = 0; z < Board.Z_SIZE; z++)
        {
            for(int x = 0; x < Board.X_SIZE; x++)
            {
                if(!board.isFull(new Move(z, x)))
                {
                    moves.add(new Move(z, x));
                }
            }
        }

        int[] friendlyScores = new int[moves.size()];
        int[] oppositionScores = new int[moves.size()];

        //--------------GRADE-MOVES---------------------//
        for(int x=0; x<moves.size(); x++)
        {
            friendlyScores[x] = grader(board, moves.get(x), color);
            oppositionScores[x] = grader(board, moves.get(x), opposition);
        }

        /*for(int x=0; x<friendlyScores.length; x++)
        {
            System.out.println("AI: " + friendlyScores[x] + ", Opponent: " + oppositionScores[x]);
        }*/

        int friendlyMax = 0;
        int oppositionMax = 0;
        for(int x=1; x<moves.size(); x++)
        {
            if(friendlyScores[x] > friendlyScores[x-1] && friendlyScores[x] > friendlyMax)
                friendlyMax = friendlyScores[x];

            if(oppositionScores[x] > oppositionScores[x-1] && oppositionScores[x] > oppositionMax)
                oppositionMax = oppositionScores[x];

            if(friendlyMax > oppositionMax || friendlyMax == oppositionMax)
                bestMove = moves.get(x);

            else if(friendlyMax < oppositionMax)
            {
                ;
            }
        }

        return bestMove;
    }

    private int grader(Board grid, Move move, char color)
    {
        int score = 0;

        //----------Horizontal-LEFT-RIGHT---------//
        for(int z=0; z < Board.Z_SIZE; z++)
        {
            for(int y=0; y < Board.Y_SIZE; y++)
            {
                for(int x=0; x+5 < Board.X_SIZE; x++)
                {
                    if(move.getX() < 3)
                    {
                        if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ()][y][move.getX() + 1] == color && grid.getBoard()[move.getZ()][y][move.getX() + 2] == color &&
                                grid.getBoard()[move.getZ()][y][move.getX() + 3] == color && grid.getBoard()[move.getZ()][y][move.getX() + 4] == color && grid.getBoard()[move.getZ()][y][move.getX() + 5] == neutral)
                            score += 5;

                        else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ()][y][move.getX() + 1] == color && grid.getBoard()[move.getZ()][y][move.getX() + 2] == color &&
                                grid.getBoard()[move.getZ()][y][move.getX() + 3] == color && grid.getBoard()[move.getZ()][y][move.getX() + 4] == neutral && grid.getBoard()[move.getZ()][y][move.getX() + 5] == neutral)
                            score += 4;

                        else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ()][y][move.getX() + 1] == color && grid.getBoard()[move.getZ()][y][move.getX() + 2] == color &&
                                grid.getBoard()[move.getZ()][y][move.getX() + 3] == neutral && grid.getBoard()[move.getZ()][y][move.getX() + 4] == neutral && grid.getBoard()[move.getZ()][y][move.getX() + 5] == neutral)
                            score += 3;

                        else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ()][y][move.getX() + 1] == color && grid.getBoard()[move.getZ()][y][move.getX() + 2] == neutral &&
                                grid.getBoard()[move.getZ()][y][move.getX() + 3] == neutral && grid.getBoard()[move.getZ()][y][move.getX() + 4] == neutral && grid.getBoard()[move.getZ()][y][move.getX() + 5] == neutral)
                            score += 2;

                        else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ()][y][move.getX() + 1] == neutral && grid.getBoard()[move.getZ()][y][move.getX() + 2] == neutral &&
                                grid.getBoard()[move.getZ()][y][move.getX() + 3] == neutral && grid.getBoard()[move.getZ()][y][move.getX() + 4] == neutral && grid.getBoard()[move.getZ()][y][move.getX() + 5] == neutral)
                            score += 1;

                        else
                            score += 0;
                    }

                }
            }
        }

        //----------Vertical---------//
        for(int z=0; z+5 < Board.Z_SIZE; z++)
        {
            for(int y=0; y < Board.Y_SIZE; y++)
            {
                for(int x=0; x < Board.X_SIZE; x++)
                {

                    if(move.getZ() < 3)
                    {

                        if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ() + 1][y][move.getX()] == color && grid.getBoard()[move.getZ() + 2][y][move.getX()] == color &&
                                grid.getBoard()[move.getZ() + 3][y][move.getX()] == color && grid.getBoard()[move.getZ() + 4][y][move.getX()] == color && grid.getBoard()[move.getZ() + 5][y][move.getX()] == neutral)
                            score += 5;

                        else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ() + 1][y][move.getX()] == color && grid.getBoard()[move.getZ() + 2][y][move.getX()] == color &&
                                grid.getBoard()[move.getZ() + 3][y][move.getX()] == color && grid.getBoard()[move.getZ() + 4][y][move.getX()] == neutral && grid.getBoard()[move.getZ() + 5][y][move.getX()] == neutral)
                            score += 4;

                        else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ() + 1][y][move.getX()] == color && grid.getBoard()[move.getZ() + 2][y][move.getX()] == color &&
                                grid.getBoard()[move.getZ() + 3][y][move.getX()] == neutral && grid.getBoard()[move.getZ() + 4][y][move.getX()] == neutral && grid.getBoard()[move.getZ() + 5][y][move.getX()] == neutral)
                            score += 3;

                        else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ() + 1][y][move.getX()] == color && grid.getBoard()[move.getZ() + 2][y][move.getX()] == neutral &&
                                grid.getBoard()[move.getZ() + 3][y][move.getX()] == neutral && grid.getBoard()[move.getZ() + 4][y][move.getX()] == neutral && grid.getBoard()[move.getZ() + 5][y][move.getX()] == neutral)
                            score += 2;

                        else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ() + 1][y][move.getX()] == neutral && grid.getBoard()[move.getZ() + 2][y][move.getX()] == neutral &&
                                grid.getBoard()[move.getZ() + 3][y][move.getX()] == neutral && grid.getBoard()[move.getZ() + 4][y][move.getX()] == neutral && grid.getBoard()[move.getZ() + 5][y][move.getX()] == neutral)
                            score += 1;

                        else
                            score += 0;
                    }

                }
            }
        }

        //----------Horizontal-UP-DOWN---------//
        for(int z=0; z < Board.Z_SIZE; z++)
        {
            for(int y=0; y+5 < Board.Y_SIZE; y++)
            {
                for(int x=0; x < Board.X_SIZE; x++)
                {
                    if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ()][y + 1][move.getX()] == color && grid.getBoard()[move.getZ()][y + 2][move.getX()] == color &&
                            grid.getBoard()[move.getZ()][y + 3][move.getX()] == color && grid.getBoard()[move.getZ()][y + 4][move.getX()] == color && grid.getBoard()[move.getZ()][y + 5][move.getX()] == neutral)
                        score += 5;

                    else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ()][y + 1][move.getX()] == color && grid.getBoard()[move.getZ()][y + 2][move.getX()] == color &&
                                grid.getBoard()[move.getZ()][y + 3][move.getX()] == color && grid.getBoard()[move.getZ()][y + 4][move.getX()] == neutral && grid.getBoard()[move.getZ()][y + 5][move.getX()] == neutral)
                        score += 4;

                    else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ()][y + 1][move.getX()] == color && grid.getBoard()[move.getZ()][y + 2][move.getX()] == color &&
                                grid.getBoard()[move.getZ()][y + 3][move.getX()] == neutral && grid.getBoard()[move.getZ()][y + 4][move.getX()] == neutral && grid.getBoard()[move.getZ()][y + 5][move.getX()] == neutral)
                        score += 3;

                    else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ()][y + 1][move.getX()] == color && grid.getBoard()[move.getZ()][y + 2][move.getX()] == neutral &&
                                grid.getBoard()[move.getZ()][y + 3][move.getX()] == neutral && grid.getBoard()[move.getZ()][y + 4][move.getX()] == neutral && grid.getBoard()[move.getZ()][y + 5][move.getX()] == neutral)
                        score += 2;

                    else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ()][y + 1][move.getX()] == neutral && grid.getBoard()[move.getZ()][y + 2][move.getX()] == neutral &&
                                grid.getBoard()[move.getZ()][y + 3][move.getX()] == neutral && grid.getBoard()[move.getZ()][y + 4][move.getX()] == neutral && grid.getBoard()[move.getZ()][y + 5][move.getX()] == neutral)
                        score += 1;

                    else
                        score += 0;

                }
            }
        }

        //---------Diagonal-UP-DOWN-------//
        for(int z=0; z+5 < Board.Z_SIZE; z++)
        {
            for(int y=0; y < Board.Y_SIZE; y++)
            {
                for(int x=0; x+5 < Board.X_SIZE; x++)
                {

                    if(move.getZ() < 3 && move.getX() < 3)
                    {
                        if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ() + 1][y][move.getX() + 1] == color && grid.getBoard()[move.getZ() + 2][y][move.getX() + 2] == color &&
                                grid.getBoard()[move.getZ() + 3][y][move.getX() + 3] == color && grid.getBoard()[move.getZ() + 4][y][move.getX() + 4] == color && grid.getBoard()[move.getZ() + 5][y][move.getX() + 5] == neutral)
                            score += 5;

                        else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ() + 1][y][move.getX() + 1] == color && grid.getBoard()[move.getZ() + 2][y][move.getX() + 2] == color &&
                                grid.getBoard()[move.getZ() + 3][y][move.getX() + 3] == color && grid.getBoard()[move.getZ() + 4][y][move.getX() + 4] == neutral && grid.getBoard()[move.getZ() + 5][y][move.getX() + 5] == neutral)
                            score += 4;

                        else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ() + 1][y][move.getX() + 1] == color && grid.getBoard()[move.getZ() + 2][y][move.getX() + 2] == color &&
                                grid.getBoard()[move.getZ() + 3][y][move.getX() + 3] == neutral && grid.getBoard()[move.getZ() + 4][y][move.getX() + 4] == neutral && grid.getBoard()[move.getZ() + 5][y][move.getX() + 5] == neutral)
                            score += 3;

                        else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ() + 1][y][move.getX() + 1] == color && grid.getBoard()[move.getZ() + 2][y][move.getX() + 2] == neutral &&
                                grid.getBoard()[move.getZ() + 3][y][move.getX() + 3] == neutral && grid.getBoard()[move.getZ() + 4][y][move.getX() + 4] == neutral && grid.getBoard()[move.getZ() + 5][y][move.getX() + 5] == neutral)
                            score += 2;

                        else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ() + 1][y][move.getX() + 1] == neutral && grid.getBoard()[move.getZ() + 2][y][move.getX() + 2] == neutral &&
                                grid.getBoard()[move.getZ() + 3][y][move.getX() + 3] == neutral && grid.getBoard()[move.getZ() + 4][y][move.getX() + 4] == neutral && grid.getBoard()[move.getZ() + 5][y][move.getX() + 5] == neutral)
                            score += 1;

                        else
                            score += 0;
                    }

                }
            }
        }

        //---------Diagonal-DOWN-UP-------//
        for(int z=Board.Z_SIZE-1; z-5> 0; z--)
        {
            for(int y=0; y < Board.Y_SIZE; y++)
            {
                for(int x=0; x+5 < Board.X_SIZE; x++)
                {
                    if(move.getZ() > 5 && move.getX() < 3)
                    {
                        if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ() - 1][y][move.getX() + 1] == color && grid.getBoard()[move.getZ() - 2][y][move.getX() + 2] == color &&
                                grid.getBoard()[move.getZ() - 3][y][move.getX() + 3] == color && grid.getBoard()[move.getZ() - 4][y][move.getX() + 4] == color && grid.getBoard()[move.getZ() - 5][y][move.getX() + 5] == neutral)
                            score += 5;

                        else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ() - 1][y][move.getX() + 1] == color && grid.getBoard()[move.getZ() - 2][y][move.getX() + 2] == color &&
                                grid.getBoard()[move.getZ() - 3][y][move.getX() + 3] == color && grid.getBoard()[move.getZ() - 4][y][move.getX() + 4] == neutral && grid.getBoard()[move.getZ() - 5][y][move.getX() + 5] == neutral)
                            score += 4;

                        else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ() - 1][y][move.getX() + 1] == color && grid.getBoard()[move.getZ() - 2][y][move.getX() + 2] == color &&
                                grid.getBoard()[move.getZ() - 3][y][move.getX() + 3] == neutral && grid.getBoard()[move.getZ() - 4][y][move.getX() + 4] == neutral && grid.getBoard()[move.getZ() - 5][y][move.getX() + 5] == neutral)
                            score += 3;

                        else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ() - 1][y][move.getX() + 1] == color && grid.getBoard()[move.getZ() - 2][y][move.getX() + 2] == neutral &&
                                grid.getBoard()[move.getZ() - 3][y][move.getX() + 3] == neutral && grid.getBoard()[move.getZ() - 4][y][move.getX() + 4] == neutral && grid.getBoard()[move.getZ() - 5][y][move.getX() + 5] == neutral)
                            score += 2;

                        else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ() - 1][y][move.getX() + 1] == neutral && grid.getBoard()[move.getZ() - 2][y][move.getX() + 2] == neutral &&
                                grid.getBoard()[move.getZ() - 3][y][move.getX() + 3] == neutral && grid.getBoard()[move.getZ() - 4][y][move.getX() + 4] == neutral && grid.getBoard()[move.getZ() - 5][y][move.getX() + 5] == neutral)
                            score += 1;

                        else
                            score += 0;
                    }
                }
            }
        }

        //--------V-Diagonal-UP-DOWN-WALL-1----//
        for(int z=0; z < Board.Z_SIZE; z++)
        {
            for(int y=0; y+5 < Board.Y_SIZE; y++)
            {
                for(int x=0; x+5 < Board.X_SIZE; x++)
                {
                    if(move.getX() < 3)
                    {
                        if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ()][y + 1][move.getX() + 1] == color && grid.getBoard()[move.getZ()][y + 2][move.getX() + 2] == color &&
                                grid.getBoard()[move.getZ()][y + 3][move.getX() + 3] == color && grid.getBoard()[move.getZ()][y + 4][move.getX() + 4] == color && grid.getBoard()[move.getZ()][y + 5][move.getX() + 5] == neutral)
                            score += 5;

                        else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ()][y + 1][move.getX() + 1] == color && grid.getBoard()[move.getZ()][y + 2][move.getX() + 2] == color &&
                                grid.getBoard()[move.getZ()][y + 3][move.getX() + 3] == color && grid.getBoard()[move.getZ()][y + 4][move.getX() + 4] == neutral && grid.getBoard()[move.getZ()][y + 5][move.getX() + 5] == neutral)
                            score += 4;

                        else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ()][y + 1][move.getX()] == color && grid.getBoard()[move.getZ()][y + 2][move.getX()] == color &&
                                grid.getBoard()[move.getZ()][y + 3][move.getX() + 3] == neutral && grid.getBoard()[move.getZ()][y + 4][move.getX() + 4] == neutral && grid.getBoard()[move.getZ()][y + 5][move.getX() + 5] == neutral)
                            score += 3;

                        else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ()][y + 1][move.getX() + 1] == color && grid.getBoard()[move.getZ()][y + 2][move.getX() + 2] == neutral &&
                                grid.getBoard()[move.getZ()][y + 3][move.getX() + 3] == neutral && grid.getBoard()[move.getZ()][y + 4][move.getX() + 4] == neutral && grid.getBoard()[move.getZ()][y + 5][move.getX() + 5] == neutral)
                            score += 2;

                        else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ()][y + 1][move.getX() + 1] == neutral && grid.getBoard()[move.getZ()][y + 2][move.getX() + 2] == neutral &&
                                grid.getBoard()[move.getZ()][y + 3][move.getX() + 3] == neutral && grid.getBoard()[move.getZ()][y + 4][move.getX() + 4] == neutral && grid.getBoard()[move.getZ()][y + 5][move.getX() + 5] == neutral)
                            score += 1;

                        else
                            score += 0;
                    }

                }
            }
        }

        //--------V-Diagonal-DOWN-UP-WALL-1----//
        for(int z=0; z < Board.Z_SIZE; z++)
        {
            for(int y=Board.Y_SIZE-1; y-5 > 0; y--)
            {
                for(int x=0; x+5 < Board.X_SIZE; x++)
                {

                    if(move.getX() < 3)
                    {
                        if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ()][y - 1][move.getX() + 1] == color && grid.getBoard()[move.getZ()][y - 2][move.getX() + 2] == color &&
                                grid.getBoard()[move.getZ()][y - 3][move.getX() + 3] == color && grid.getBoard()[move.getZ()][y - 4][move.getX() + 4] == color && grid.getBoard()[move.getZ()][y - 5][move.getX() + 5] == neutral)
                            score += 5;

                        else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ()][y - 1][move.getX() + 1] == color && grid.getBoard()[move.getZ()][y - 2][move.getX() + 2] == color &&
                                grid.getBoard()[move.getZ()][y - 3][move.getX() + 3] == color && grid.getBoard()[move.getZ()][y - 4][move.getX() + 4] == neutral && grid.getBoard()[move.getZ()][y - 5][move.getX() + 5] == neutral)
                            score += 4;

                        else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ()][y - 1][move.getX()] == color && grid.getBoard()[move.getZ()][y - 2][move.getX()] == color &&
                                grid.getBoard()[move.getZ()][y - 3][move.getX() + 3] == neutral && grid.getBoard()[move.getZ()][y - 4][move.getX() + 4] == neutral && grid.getBoard()[move.getZ()][y - 5][move.getX() + 5] == neutral)
                            score += 3;

                        else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ()][y - 1][move.getX() + 1] == color && grid.getBoard()[move.getZ()][y - 2][move.getX() + 2] == neutral &&
                                grid.getBoard()[move.getZ()][y - 3][move.getX() + 3] == neutral && grid.getBoard()[move.getZ()][y - 4][move.getX() + 4] == neutral && grid.getBoard()[move.getZ()][y - 5][move.getX() + 5] == neutral)
                            score += 2;

                        else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ()][y - 1][move.getX() + 1] == neutral && grid.getBoard()[move.getZ()][y - 2][move.getX() + 2] == neutral &&
                                grid.getBoard()[move.getZ()][y - 3][move.getX() + 3] == neutral && grid.getBoard()[move.getZ()][y - 4][move.getX() + 4] == neutral && grid.getBoard()[move.getZ()][y - 5][move.getX() + 5] == neutral)
                            score += 1;

                        else
                            score += 0;
                    }

                }
            }
        }

        //--------V-Diagonal-DOWN-UP-WALL-2----//
        for(int z=Board.Z_SIZE-1; z-5 > 0; z--)
        {
            for(int y=Board.Y_SIZE-1; y-5 > 0; y--)
            {
                for(int x=0; x < Board.X_SIZE; x++)
                {
                    if(move.getZ() > 5)
                    {
                        if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ() - 1][y - 1][move.getX()] == color && grid.getBoard()[move.getZ() - 2][y - 2][move.getX()] == color &&
                                grid.getBoard()[move.getZ() - 3][y - 3][move.getX()] == color && grid.getBoard()[move.getZ() - 4][y - 4][move.getX()] == color && grid.getBoard()[move.getZ() - 5][y - 5][move.getX()] == neutral)
                            score += 5;

                        else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ() - 1][y - 1][move.getX()] == color && grid.getBoard()[move.getZ() - 2][y - 2][move.getX()] == color &&
                                grid.getBoard()[move.getZ() - 3][y - 3][move.getX()] == color && grid.getBoard()[move.getZ() - 4][y - 4][move.getX()] == neutral && grid.getBoard()[move.getZ() - 5][y - 5][move.getX()] == neutral)
                            score += 4;

                        else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ() - 1][y - 1][move.getX()] == color && grid.getBoard()[move.getZ() - 2][y - 2][move.getX()] == color &&
                                grid.getBoard()[move.getZ() - 3][y - 3][move.getX()] == neutral && grid.getBoard()[move.getZ() - 4][y - 4][move.getX()] == neutral && grid.getBoard()[move.getZ() - 5][y - 5][move.getX()] == neutral)
                            score += 3;

                        else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ() - 1][y - 1][move.getX()] == color && grid.getBoard()[move.getZ() - 2][y - 2][move.getX()] == neutral &&
                                grid.getBoard()[move.getZ() - 3][y - 3][move.getX()] == neutral && grid.getBoard()[move.getZ() - 4][y - 4][move.getX()] == neutral && grid.getBoard()[move.getZ() - 5][y - 5][move.getX()] == neutral)
                            score += 2;

                        else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ() - 1][y - 1][move.getX()] == neutral && grid.getBoard()[move.getZ() - 2][y - 2][move.getX()] == neutral &&
                                grid.getBoard()[move.getZ() - 3][y - 3][move.getX()] == neutral && grid.getBoard()[move.getZ() - 4][y - 4][move.getX()] == neutral && grid.getBoard()[move.getZ() - 5][y - 5][move.getX()] == neutral)
                            score += 1;

                        else
                            score += 0;
                    }

                }
            }
        }

        //--------V-Diagonal--UP-DOWN-WALL-2---//
        for(int z=0; z+5 < Board.Z_SIZE; z++)
        {
            for(int y=Board.Y_SIZE-1; y-5 > 0; y--)
            {
                for(int x=0; x < Board.X_SIZE; x++)
                {
                    if(move.getZ() < 3)
                    {
                        if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ() + 1][y - 1][move.getX()] == color && grid.getBoard()[move.getZ() + 2][y - 2][move.getX()] == color &&
                                grid.getBoard()[move.getZ() + 3][y - 3][move.getX()] == color && grid.getBoard()[move.getZ() + 4][y - 4][move.getX()] == color && grid.getBoard()[move.getZ() + 5][y - 5][move.getX()] == neutral)
                            score += 5;

                        else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ() + 1][y - 1][move.getX()] == color && grid.getBoard()[move.getZ() + 2][y - 2][move.getX()] == color &&
                                grid.getBoard()[move.getZ() + 3][y - 3][move.getX()] == color && grid.getBoard()[move.getZ() + 4][y - 4][move.getX()] == neutral && grid.getBoard()[move.getZ() + 5][y - 5][move.getX()] == neutral)
                            score += 4;

                        else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ() + 1][y - 1][move.getX()] == color && grid.getBoard()[move.getZ() + 2][y - 2][move.getX()] == color &&
                                grid.getBoard()[move.getZ() + 3][y - 3][move.getX()] == neutral && grid.getBoard()[move.getZ() + 4][y - 4][move.getX()] == neutral && grid.getBoard()[move.getZ() + 5][y - 5][move.getX()] == neutral)
                            score += 3;

                        else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ() + 1][y - 1][move.getX()] == color && grid.getBoard()[move.getZ() + 2][y - 2][move.getX()] == neutral &&
                                grid.getBoard()[move.getZ() + 3][y - 3][move.getX()] == neutral && grid.getBoard()[move.getZ() + 4][y - 4][move.getX()] == neutral && grid.getBoard()[move.getZ() + 5][y - 5][move.getX()] == neutral)
                            score += 2;

                        else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ() + 1][y - 1][move.getX()] == neutral && grid.getBoard()[move.getZ() + 2][y - 2][move.getX()] == neutral &&
                                grid.getBoard()[move.getZ() + 3][y - 3][move.getX()] == neutral && grid.getBoard()[move.getZ() + 4][y - 4][move.getX()] == neutral && grid.getBoard()[move.getZ() + 5][y - 5][move.getX()] == neutral)
                            score += 1;

                        else
                            score += 0;
                    }

                }
            }
        }

        //--------V-IDK-ANYMORE---------//
        for(int z=Board.Z_SIZE-1; z-5 > 0; z--)
        {
            for(int y=Board.Y_SIZE-1; y-5 > 0; y--)
            {
                for(int x=0; x+5 < Board.X_SIZE; x++)
                {
                    if(move.getZ() > 5 && move.getX() < 3)
                    {
                        if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ() - 1][y - 1][move.getX() + 1] == color && grid.getBoard()[move.getZ() - 2][y - 2][move.getX() + 2] == color &&
                                grid.getBoard()[move.getZ() - 3][y - 3][move.getX() + 3] == color && grid.getBoard()[move.getZ() - 4][y - 4][move.getX() + 4] == color && grid.getBoard()[move.getZ() - 5][y - 5][move.getX() + 5] == neutral)
                            score += 5;

                        else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ() - 1][y - 1][move.getX() + 1] == color && grid.getBoard()[move.getZ() - 2][y - 2][move.getX() + 2] == color &&
                                grid.getBoard()[move.getZ() - 3][y - 3][move.getX() + 3] == color && grid.getBoard()[move.getZ() - 4][y - 4][move.getX() + 4] == neutral && grid.getBoard()[move.getZ() - 5][y - 5][move.getX() + 5] == neutral)
                            score += 4;

                        else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ() - 1][y - 1][move.getX() + 1] == color && grid.getBoard()[move.getZ() - 2][y - 2][move.getX() + 2] == color &&
                                grid.getBoard()[move.getZ() - 3][y - 3][move.getX() + 3] == neutral && grid.getBoard()[move.getZ() - 4][y - 4][move.getX() + 4] == neutral && grid.getBoard()[move.getZ() - 5][y - 5][move.getX() + 5] == neutral)
                            score += 3;

                        else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ() - 1][y - 1][move.getX() + 1] == color && grid.getBoard()[move.getZ() - 2][y - 2][move.getX() + 2] == neutral &&
                                grid.getBoard()[move.getZ() - 3][y - 3][move.getX() + 3] == neutral && grid.getBoard()[move.getZ() - 4][y - 4][move.getX() + 4] == neutral && grid.getBoard()[move.getZ() - 5][y - 5][move.getX() + 5] == neutral)
                            score += 2;

                        else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ() - 1][y - 1][move.getX() + 1] == neutral && grid.getBoard()[move.getZ() - 2][y - 2][move.getX() + 2] == neutral &&
                                grid.getBoard()[move.getZ() - 3][y - 3][move.getX() + 3] == neutral && grid.getBoard()[move.getZ() - 4][y - 4][move.getX() + 4] == neutral && grid.getBoard()[move.getZ() - 5][y - 5][move.getX() + 5] == neutral)
                            score += 1;

                        else
                            score += 0;
                    }

                }
            }
        }

        //--------V-IDK-ANYMORE-2--------//
        for(int z=Board.Z_SIZE-1; z-5 > 0; z--)
        {
            for(int y=0; y+5 < Board.Y_SIZE; y++)
            {
                for(int x=0; x+5 < Board.X_SIZE; x++)
                {
                    if(move.getZ() > 5 && move.getX() < 3)
                    {
                        if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ() - 1][y + 1][move.getX() + 1] == color && grid.getBoard()[move.getZ() - 2][y + 2][move.getX() + 2] == color &&
                                grid.getBoard()[move.getZ() - 3][y + 3][move.getX() + 3] == color && grid.getBoard()[move.getZ() - 4][y + 4][move.getX() + 4] == color && grid.getBoard()[move.getZ() - 5][y + 5][move.getX() + 5] == neutral)
                            score += 5;

                        else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ() - 1][y + 1][move.getX() + 1] == color && grid.getBoard()[move.getZ() - 2][y + 2][move.getX() + 2] == color &&
                                grid.getBoard()[move.getZ() - 3][y + 3][move.getX() + 3] == color && grid.getBoard()[move.getZ() - 4][y + 4][move.getX() + 4] == neutral && grid.getBoard()[move.getZ() - 5][y + 5][move.getX() + 5] == neutral)
                            score += 4;

                        else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ() - 1][y + 1][move.getX() + 1] == color && grid.getBoard()[move.getZ() - 2][y + 2][move.getX() + 2] == color &&
                                grid.getBoard()[move.getZ() - 3][y + 3][move.getX() + 3] == neutral && grid.getBoard()[move.getZ() - 4][y + 4][move.getX() + 4] == neutral && grid.getBoard()[move.getZ() - 5][y + 5][move.getX() + 5] == neutral)
                            score += 3;

                        else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ() - 1][y + 1][move.getX() + 1] == color && grid.getBoard()[move.getZ() - 2][y + 2][move.getX() + 2] == neutral &&
                                grid.getBoard()[move.getZ() - 3][y + 3][move.getX() + 3] == neutral && grid.getBoard()[move.getZ() - 4][y + 4][move.getX() + 4] == neutral && grid.getBoard()[move.getZ() - 5][y + 5][move.getX() + 5] == neutral)
                            score += 2;

                        else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ() - 1][y + 1][move.getX() + 1] == neutral && grid.getBoard()[move.getZ() - 2][y + 2][move.getX() + 2] == neutral &&
                                grid.getBoard()[move.getZ() - 3][y + 3][move.getX() + 3] == neutral && grid.getBoard()[move.getZ() - 4][y + 4][move.getX() + 4] == neutral && grid.getBoard()[move.getZ() - 5][y + 5][move.getX() + 5] == neutral)
                            score += 1;

                        else
                            score += 0;
                    }

                }
            }
        }

        //--------V-WTF-AM-I-DOING-------//
        for(int z=0; z+5 < Board.Z_SIZE; z++)
        {
            for(int y=0; y+5 < Board.Y_SIZE; y++)
            {
                for(int x=0; x+5 < Board.X_SIZE; x++)
                {
                    if(move.getZ() < 3 && move.getX() < 3)
                    {
                        if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ() + 1][y + 1][move.getX() + 1] == color && grid.getBoard()[move.getZ() + 2][y + 2][move.getX() + 2] == color &&
                                grid.getBoard()[move.getZ() + 3][y + 3][move.getX() + 3] == color && grid.getBoard()[move.getZ() + 4][y + 4][move.getX() + 4] == color && grid.getBoard()[move.getZ() + 5][y + 5][move.getX() + 5] == neutral)
                            score += 5;

                        else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ() + 1][y + 1][move.getX() + 1] == color && grid.getBoard()[move.getZ() + 2][y + 2][move.getX() + 2] == color &&
                                grid.getBoard()[move.getZ() + 3][y + 3][move.getX() + 3] == color && grid.getBoard()[move.getZ() + 4][y + 4][move.getX() + 4] == neutral && grid.getBoard()[move.getZ() + 5][y + 5][move.getX() + 5] == neutral)
                            score += 4;

                        else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ() + 1][y + 1][move.getX() + 1] == color && grid.getBoard()[move.getZ() + 2][y + 2][move.getX() + 2] == color &&
                                grid.getBoard()[move.getZ() + 3][y + 3][move.getX() + 3] == neutral && grid.getBoard()[move.getZ() + 4][y + 4][move.getX() + 4] == neutral && grid.getBoard()[move.getZ() + 5][y + 5][move.getX() + 5] == neutral)
                            score += 3;

                        else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ() + 1][y + 1][move.getX() + 1] == color && grid.getBoard()[move.getZ() + 2][y + 2][move.getX() + 2] == neutral &&
                                grid.getBoard()[move.getZ() + 3][y + 3][move.getX() + 3] == neutral && grid.getBoard()[move.getZ() + 4][y + 4][move.getX() + 4] == neutral && grid.getBoard()[move.getZ() + 5][y + 5][move.getX() + 5] == neutral)
                            score += 2;

                        else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ() + 1][y + 1][move.getX() + 1] == neutral && grid.getBoard()[move.getZ() + 2][y + 2][move.getX() + 2] == neutral &&
                                grid.getBoard()[move.getZ() + 3][y + 3][move.getX() + 3] == neutral && grid.getBoard()[move.getZ() + 4][y + 4][move.getX() + 4] == neutral && grid.getBoard()[move.getZ() + 5][y + 5][move.getX() + 5] == neutral)
                            score += 1;

                        else
                            score += 0;
                    }

                }
            }
        }

        //--------V-WTF-AM-I-DOING-2-----//
        for(int z=0; z+5 < Board.Z_SIZE; z++)
        {
            for(int y=Board.Y_SIZE-1; y-5 > 0; y--)
            {
                for(int x=0; x+5 < Board.X_SIZE; x++)
                {
                    if(move.getZ() < 3 && move.getX() < 3)
                    {
                        if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ() + 1][y - 1][move.getX() + 1] == color && grid.getBoard()[move.getZ() + 2][y - 2][move.getX() + 2] == color &&
                                grid.getBoard()[move.getZ() + 3][y - 3][move.getX() + 3] == color && grid.getBoard()[move.getZ() + 4][y - 4][move.getX() + 4] == color && grid.getBoard()[move.getZ() + 5][y - 5][move.getX() + 5] == neutral)
                            score += 5;

                        else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ() + 1][y - 1][move.getX() + 1] == color && grid.getBoard()[move.getZ() + 2][y - 2][move.getX() + 2] == color &&
                                grid.getBoard()[move.getZ() + 3][y - 3][move.getX() + 3] == color && grid.getBoard()[move.getZ() + 4][y - 4][move.getX() + 4] == neutral && grid.getBoard()[move.getZ() + 5][y - 5][move.getX() + 5] == neutral)
                            score += 4;

                        else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ() + 1][y - 1][move.getX() + 1] == color && grid.getBoard()[move.getZ() + 2][y - 2][move.getX() + 2] == color &&
                                grid.getBoard()[move.getZ() + 3][y - 3][move.getX() + 3] == neutral && grid.getBoard()[move.getZ() + 4][y - 4][move.getX() + 4] == neutral && grid.getBoard()[move.getZ() + 5][y - 5][move.getX() + 5] == neutral)
                            score += 3;

                        else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ() + 1][y - 1][move.getX() + 1] == color && grid.getBoard()[move.getZ() + 2][y - 2][move.getX() + 2] == neutral &&
                                grid.getBoard()[move.getZ() + 3][y - 3][move.getX() + 3] == neutral && grid.getBoard()[move.getZ() + 4][y - 4][move.getX() + 4] == neutral && grid.getBoard()[move.getZ() + 5][y - 5][move.getX() + 5] == neutral)
                            score += 2;

                        else if (grid.getBoard()[move.getZ()][y][move.getX()] == color && grid.getBoard()[move.getZ() + 1][y - 1][move.getX() + 1] == neutral && grid.getBoard()[move.getZ() + 2][y - 2][move.getX() + 2] == neutral &&
                                grid.getBoard()[move.getZ() + 3][y - 3][move.getX() + 3] == neutral && grid.getBoard()[move.getZ() + 4][y - 4][move.getX() + 4] == neutral && grid.getBoard()[move.getZ() + 5][y - 5][move.getX() + 5] == neutral)
                            score += 1;

                        else
                            score += 0;
                    }

                }
            }
        }

        return score;
    }
    
    private Move counterMeasures(Board grid)
    {
        
    }

    @Override
    public Player freshCopy()
    {
        return new Syarief_Andrew_AI(board, color);
    }

}
